#pragma once
#include "CPatch.h"

#include "RwFunctionsList.h"

extern "C" void _rwD3D9FindCorrectRasterFormat();
extern "C" void _rwD3D9CheckValidZBufferFormat();
extern "C" void _rwD3D9CheckValidCameraTextureFormat();

#ifdef RwIm2DGetNearScreenZ
#undef RwIm2DGetNearScreenZ
#endif

RwReal RwIm2DGetNearScreenZ(void)
{
	return (RWSRCGLOBAL(dOpenDevice).zBufferNear);
}

#ifdef RwIm2DGetFarScreenZ
#undef RwIm2DGetFarScreenZ
#endif
RwReal RwIm2DGetFarScreenZ(void)
{
	return (RWSRCGLOBAL(dOpenDevice).zBufferFar);
}

#ifdef RwRenderStateGet
#undef RwRenderStateGet
#endif
RwBool RwRenderStateGet(RwRenderState state, void *value)
{
	return (RWSRCGLOBAL(dOpenDevice).fpRenderStateGet(state, value));
}

#ifdef RwRenderStateSet
#undef RwRenderStateSet
#endif
RwBool RwRenderStateSet(RwRenderState state, void *value)
{
	return (RWSRCGLOBAL(dOpenDevice).fpRenderStateSet(state, value));
}

#ifdef RwIm2DRenderLine
#undef RwIm2DRenderLine
#endif
RwBool RwIm2DRenderLine(RwIm2DVertex *vertices, RwInt32 numVertices, RwInt32 vert1, RwInt32 vert2)
{
	return (RWSRCGLOBAL(dOpenDevice).fpIm2DRenderLine(vertices, numVertices, vert1, vert2));
}

#ifdef RwIm2DRenderPrimitive
#undef RwIm2DRenderPrimitive
#endif
RwBool RwIm2DRenderPrimitive(RwPrimitiveType primType, RwIm2DVertex *vertices, RwInt32 numVertices)
{
	return (RWSRCGLOBAL(dOpenDevice).fpIm2DRenderPrimitive(primType, vertices, numVertices));
}

#ifdef RwIm2DRenderIndexedPrimitive
#undef RwIm2DRenderIndexedPrimitive
#endif
RwBool RwIm2DRenderIndexedPrimitive(RwPrimitiveType primType, RwIm2DVertex *vertices, RwInt32 numVertices, RwImVertexIndex *indices, RwInt32 numIndices)
{
	return (RWSRCGLOBAL(dOpenDevice).fpIm2DRenderIndexedPrimitive(primType, vertices, numVertices, indices, numIndices));
}

void MakeRwFunctionsHook()
{
//	CPatch::RedirectJump(0x63BFF0, _rwD3D9RasterSubRaster                                      );
//	CPatch::RedirectJump(0x63C020, _rwD3D9TextureSetRaster                                     );
//	CPatch::RedirectJump(0x63C030, _rwD3D9RasterGetMipLevels                                   );
//	CPatch::RedirectJump(0x63C0A0, _rwD3D9RasterDestroy                                        );
//	CPatch::RedirectJump(0x63C310, _rwD3D9RasterCreate                                         );
//	CPatch::RedirectJump(0x63C640, rwD3D9CreateZBufferRaster                                   );
//	CPatch::RedirectJump(0x63C770, rwD3D9CreateCameraTextureRaster                             );
//	CPatch::RedirectJump(0x63C9A0, rwD3D9CreateTextureRaster                                   );
//	CPatch::RedirectJump(0x63CBD0, _rxD3D9VideoMemoryRasterListRestore                         );
//	CPatch::RedirectJump(0x63CFA0, _rxD3D9VideoMemoryRasterListRelease                         );
//	CPatch::RedirectJump(0x63D020, sub_63D020                                                  );
//	CPatch::RedirectJump(0x63D080, _rwD3D9SetRasterFormat                                      );
//	CPatch::RedirectJump(0x63D3D0, _rwD3D9CheckRasterFormat                                    );
	CPatch::RedirectJump(0x63D420, _rwD3D9FindCorrectRasterFormat                              );
//	CPatch::RedirectJump(0x63D850, _rwD3D9SetRasterContext                                     );
//	CPatch::RedirectJump(0x63D860, _rwD3D9RasterClear                                          );
//	CPatch::RedirectJump(0x63D8A0, _rwD3D9RasterClearRect                                      );
//	CPatch::RedirectJump(0x63D8C0, D3D9RasterClearGeneric                                      );
//	CPatch::RedirectJump(0x63DED0, _rwD3D9RasterRenderScaled                                   );
//	CPatch::RedirectJump(0x63DEF0, _rwD3D9RasterRenderFast                                     );
//	CPatch::RedirectJump(0x63DF10, _rwD3D9RasterRender                                         );
//	CPatch::RedirectJump(0x63DF30, rwD3D9RasterRenderGeneric                                   );
//	CPatch::RedirectJump(0x63DFD0, rwD3D9RasterCopyQuad                                        );
//	CPatch::RedirectJump(0x63E1A0, rwD3D9RasterRenderQuad                                      );
//	CPatch::RedirectJump(0x63E7C0, _rwD3D9RasterUnlockPalette                                  );
//	CPatch::RedirectJump(0x63E830, _rwD3D9RasterLockPalette                                    );
//	CPatch::RedirectJump(0x63E880, _rwD3D9RasterUnlock                                         );
//	CPatch::RedirectJump(0x63EAB0, _rwD3D9RasterLock                                           );
//	CPatch::RedirectJump(0x63EE40, _rwD3D9RasterIsCubeRaster                                   );
//	CPatch::RedirectJump(0x63EE50, _rwD3D9TextureHasAlpha                                      );
//	CPatch::RedirectJump(0x63EE70, _rwD3D9RasterClose                                          );
//	CPatch::RedirectJump(0x63EF30, _rwD3D9RasterOpen                                           );
//	CPatch::RedirectJump(0x63EF50, _rwD3D9RasterPluginAttach                                   );
//	CPatch::RedirectJump(0x63EF80, rwD3D9RasterDtor                                            );
//	CPatch::RedirectJump(0x63EFB0, rwD3D9RasterCtor                                            );
//	CPatch::RedirectJump(0x63EFD0, _rwD3D9TexDictionaryEnableRasterFormatConversion            ); // Deprecated in D3D9
//	CPatch::RedirectJump(0x63EFE0, _rwD3D9NativeTextureRead                                    );
//	CPatch::RedirectJump(0x63FD60, _rwD3D9NativeTextureWrite                                   );
//	CPatch::RedirectJump(0x6400F0, _rwD3D9NativeTextureGetSize                                 );
//	CPatch::RedirectJump(0x640190, _rwD3D9ResourceEntryInstanceDataDestroy                     );
	CPatch::RedirectJump(0x640230, RwD3D9IndexBufferCreate                                     ); // Replaced with custom R* function
//	CPatch::RedirectJump(0x640250, operator new[](uint)                                        );
//	CPatch::RedirectJump(0x640270, __construct_new_array                                       );
//	CPatch::RedirectJump(0x6402D0, __construct_array                                           );
//	CPatch::RedirectJump(0x640300, __destroy_arr                                               );
//	CPatch::RedirectJump(0x640340, __destroy_new_array                                         );
//	CPatch::RedirectJump(0x6403B0, __nw                                                        );
//	CPatch::RedirectJump(0x640430, sub_640430                                                  );
//	CPatch::RedirectJump(0x640440, sub_640440                                                  );
//	CPatch::RedirectJump(0x640450, sub_640450                                                  );
//	CPatch::RedirectJump(0x6404A0, sub_6404A0                                                  );
//	CPatch::RedirectJump(0x6404B0, sub_6404B0                                                  );
//	CPatch::RedirectJump(0x6404F0, sub_6404F0                                                  );
//	CPatch::RedirectJump(0x640500, _rpReadAtomicRights                                         );
//	CPatch::RedirectJump(0x640540, _rpWriteAtomicRights                                        );
//	CPatch::RedirectJump(0x640580, _rpSizeAtomicRights                                         );
//	CPatch::RedirectJump(0x6405A0, AtomicDefaultRenderCallback                                 );
	CPatch::RedirectJump(0x6405D0, _rpAtomicResyncInterpolatedSphere                           ); //?
	CPatch::RedirectJump(0x640710, RpAtomicGetWorldBoundingSphere                              );
//	CPatch::RedirectJump(0x640860, _rpClumpClose                                               );
//	CPatch::RedirectJump(0x640900, ClumpTidyDestroyClump                                       );
//	CPatch::RedirectJump(0x640A80, ClumpTidyDestroyAtomic                                      );
//	CPatch::RedirectJump(0x640B00, _rpClumpOpen                                                );
//	CPatch::RedirectJump(0x640BD0, _rpClumpRegisterExtensions                                  );
//	CPatch::RedirectJump(0x640C20, ClumpInitCameraExt                                          );
//	CPatch::RedirectJump(0x640C40, ClumpDeInitCameraExt                                        );
//	CPatch::RedirectJump(0x640C50, ClumpInitLightExt                                           );
//	CPatch::RedirectJump(0x640C70, ClumpDeInitLightExt                                         );
	CPatch::RedirectJump(0x640C80, RpClumpGetNumAtomics                                        );
	CPatch::RedirectJump(0x640CB0, RpClumpRender                                               );
	CPatch::RedirectJump(0x640D00, RpClumpForAllAtomics                                        );
	CPatch::RedirectJump(0x640D40, RpClumpForAllCameras                                        );
	CPatch::RedirectJump(0x640D90, RpClumpForAllLights                                         );
	CPatch::RedirectJump(0x640DE0, RpAtomicCreate                                              );
//	CPatch::RedirectJump(0x640EB0, AtomicSync                                                  );
	CPatch::RedirectJump(0x640ED0, RpAtomicSetGeometry                                         );
	CPatch::RedirectJump(0x640F50, RpAtomicDestroy                                             );
	CPatch::RedirectJump(0x640FD0, RpAtomicClone                                               );
	CPatch::RedirectJump(0x6410E0, RpClumpClone                                                );
//	CPatch::RedirectJump(0x641330, DestroyClumpLight                                           );
//	CPatch::RedirectJump(0x641370, DestroyClumpCamera                                          );
//	CPatch::RedirectJump(0x6413B0, ClumpCallBack                                               );
	CPatch::RedirectJump(0x6413C0, RpClumpCreate                                               );
	CPatch::RedirectJump(0x641430, RpClumpDestroy                                              );
	CPatch::RedirectJump(0x6415B0, RpClumpAddAtomic                                            );
	CPatch::RedirectJump(0x6415E0, RpClumpRemoveAtomic                                         );
	CPatch::RedirectJump(0x641610, RpClumpRemoveLight                                          );
//	CPatch::RedirectJump(0x641640, ClumpAtomicStreamRead                                       );
	CPatch::RedirectJump(0x641A10, RpClumpStreamRead                                           );
	CPatch::RedirectJump(0x6422D0, RpAtomicRegisterPlugin                                      );
	CPatch::RedirectJump(0x642300, RpClumpRegisterPlugin                                       );
	CPatch::RedirectJump(0x642330, RpAtomicRegisterPluginStream                                );
	CPatch::RedirectJump(0x642360, RpAtomicSetStreamAlwaysCallBack                             );
	CPatch::RedirectJump(0x642380, RpAtomicSetStreamRightsCallBack                             );
	CPatch::RedirectJump(0x6423A0, RpAtomicGetPluginOffset                                     );
	CPatch::RedirectJump(0x6423C0, RpAtomicSetFrame                                            );
//	CPatch::RedirectJump(0x6423E0, str_chrs1                                                   );
//	CPatch::RedirectJump(0x642410, strcmp_chrs1                                                );
//	CPatch::RedirectJump(0x642480, strcmp2_chrs1                                               );
//	CPatch::RedirectJump(0x6424A0, strncmp2_chrs1                                              );
//	CPatch::RedirectJump(0x6424C0, str_chrs2                                                   );
//	CPatch::RedirectJump(0x6424F0, sub_6424F0                                                  );
//	CPatch::RedirectJump(0x642530, sub_642530                                                  );
//	CPatch::RedirectJump(0x642540, strlen                                                      );
//	CPatch::RedirectJump(0x642560, strcpy                                                      );
//	CPatch::RedirectJump(0x642580, strncpy                                                     );
//	CPatch::RedirectJump(0x6425B0, strcat                                                      );
//	CPatch::RedirectJump(0x6425E0, strncat                                                     );
//	CPatch::RedirectJump(0x642620, strcmp                                                      );
//	CPatch::RedirectJump(0x642650, strncmp                                                     );
//	CPatch::RedirectJump(0x642690, strchr                                                      );
//	CPatch::RedirectJump(0x6426C0, sub_6426C0                                                  );
//	CPatch::RedirectJump(0x642700, strrchr                                                     );
//	CPatch::RedirectJump(0x642740, strtok                                                      );
//	CPatch::RedirectJump(0x642850, strstr                                                      );
//	CPatch::RedirectJump(0x6428B0, operator delete(void *)                                     );
//	CPatch::RedirectJump(0x6428C4, sub_6428C4                                                  );
//	CPatch::RedirectJump(0x6428E0, ceilf                                                       );
//	CPatch::RedirectJump(0x642900, frand                                                       );
//	CPatch::RedirectJump(0x642920, deg2rad                                                     );
//	CPatch::RedirectJump(0x642940, _rwDeviceSystemRequest                                      );
//	CPatch::RedirectJump(0x642A20, _rwGetNumEngineInstances                                    );
	CPatch::RedirectJump(0x642A30, RwEngineRegisterPlugin                                      );
	CPatch::RedirectJump(0x642A60, RwEngineGetPluginOffset                                     );
	CPatch::RedirectJump(0x642A80, RwEngineGetNumSubSystems                                    );
	CPatch::RedirectJump(0x642AB0, RwEngineGetSubSystemInfo                                    );
	CPatch::RedirectJump(0x642AE0, RwEngineGetCurrentSubSystem                                 );
	CPatch::RedirectJump(0x642B10, RwEngineSetSubSystem                                        );
	CPatch::RedirectJump(0x642B40, RwEngineGetNumVideoModes                                    );
//	CPatch::RedirectJump(0x642B70, RwEngineGetVideoModeInfo                                    ); // replaced with RwEngineVideoMode
	CPatch::RedirectJump(0x642BA0, RwEngineGetCurrentVideoMode                                 );
//	CPatch::RedirectJump(0x642BD0, RwEngineSetVideoMode                                        ); // moved to RwEngineVideoMode
	CPatch::RedirectJump(0x642C00, RwEngineStop                                                );
	CPatch::RedirectJump(0x642C50, RwEngineStart                                               );
	CPatch::RedirectJump(0x642CE0, RwEngineClose                                               );
	CPatch::RedirectJump(0x642D50, RwEngineOpen                                                );
	CPatch::RedirectJump(0x642F00, RwEngineTerm                                                );
	CPatch::RedirectJump(0x642F40, RwEngineInit                                                );
//	CPatch::RedirectJump(0x643230, MallocWrapper                                               );
//	CPatch::RedirectJump(0x643250, FreeWrapper                                                 );
//	CPatch::RedirectJump(0x643270, _rwMatrixSetMultFn                                          );
//	CPatch::RedirectJump(0x6432A0, MatrixMultiply                                              );
	CPatch::RedirectJump(0x6433E0, _rwMatrixDeterminant                                        );
	CPatch::RedirectJump(0x643430, _rwMatrixOrthogonalError                                    );
	CPatch::RedirectJump(0x643490, _rwMatrixNormalError                                        );
	CPatch::RedirectJump(0x643520, _rwMatrixIdentityError                                      );
//	CPatch::RedirectJump(0x6435F0, _rwMatrixClose                                              );
//	CPatch::RedirectJump(0x643630, _rwMatrixOpen                                               );
	CPatch::RedirectJump(0x6436F0, RwMatrixOptimize                                            );
	CPatch::RedirectJump(0x6437B0, RwMatrixUpdate                                              );
	CPatch::RedirectJump(0x6437C0, RwMatrixMultiply                                            );
	CPatch::RedirectJump(0x643830, RwMatrixOrthoNormalize                                      );
//	CPatch::RedirectJump(0x643840, MatrixOrthoNormalize                                        );
	CPatch::RedirectJump(0x643C10, RwMatrixRotateOneMinusCosineSine                            );
	CPatch::RedirectJump(0x643EA0, RwMatrixRotate                                              );
	CPatch::RedirectJump(0x643F40, RwMatrixInvert                                              );
//	CPatch::RedirectJump(0x644030, MatrixInvertGeneric                                         );
	CPatch::RedirectJump(0x644190, RwMatrixScale                                               );
	CPatch::RedirectJump(0x644320, RwMatrixTranslate                                           );
	CPatch::RedirectJump(0x644470, RwMatrixTransform                                           );
	CPatch::RedirectJump(0x6445F0, RwMatrixDestroy                                             );
	CPatch::RedirectJump(0x644620, RwMatrixCreate                                              );
//	CPatch::RedirectJump(0x644670, _rwFrameOpen                                                );
//	CPatch::RedirectJump(0x6446F0, _rwFrameClose                                               );
	CPatch::RedirectJump(0x644730, _rwFrameCloneAndLinkClones                                  );
//	CPatch::RedirectJump(0x6447D0, rwFrameCloneRecurse                                         );
	CPatch::RedirectJump(0x644920, _rwFramePurgeClone                                          );
//	CPatch::RedirectJump(0x644990, rwSetHierarchyRoot                                          );
	CPatch::RedirectJump(0x6449D0, RwFrameDirty                                                );
//	CPatch::RedirectJump(0x6449F0, rwFrameInternalInit                                         );
	CPatch::RedirectJump(0x644AA0, RwFrameCreate                                               );
	CPatch::RedirectJump(0x644AD0, RwFrameDestroy                                              );
//	CPatch::RedirectJump(0x644C20, rwFrameDestroyRecurse                                       );
	CPatch::RedirectJump(0x644C90, RwFrameDestroyHierarchy                                     );
	CPatch::RedirectJump(0x644D00, RwFrameUpdateObjects                                        );
	CPatch::RedirectJump(0x644D80, RwFrameGetLTM                                               );
	CPatch::RedirectJump(0x644DA0, RwFrameAddChild                                             );
	CPatch::RedirectJump(0x644F70, RwFrameRemoveChild                                          );
	CPatch::RedirectJump(0x645060, RwFrameForAllChildren                                       );
	CPatch::RedirectJump(0x6450A0, RwFrameTranslate                                            );
	CPatch::RedirectJump(0x645140, RwFrameScale                                                );
	CPatch::RedirectJump(0x6451E0, RwFrameTransform                                            );
	CPatch::RedirectJump(0x645280, RwFrameRotate                                               );
	CPatch::RedirectJump(0x645320, RwFrameOrthoNormalize                                       );
	CPatch::RedirectJump(0x6453B0, RwFrameForAllObjects                                        );
	CPatch::RedirectJump(0x6453F0, RwFrameRegisterPlugin                                       );
//	CPatch::RedirectJump(0x645420, _rwStreamModuleOpen                                         );
//	CPatch::RedirectJump(0x645480, _rwStreamModuleClose                                        );
	CPatch::RedirectJump(0x6454B0, RwStreamRead                                                );
	CPatch::RedirectJump(0x645610, RwStreamWrite                                               );
	CPatch::RedirectJump(0x6457D0, RwStreamSkip                                                );
	CPatch::RedirectJump(0x6458F0, RwStreamClose                                               );
	CPatch::RedirectJump(0x6459C0, RwStreamOpen                                                );
//	CPatch::RedirectJump(0x645BB0, operator delete[](void *)                                   );
//	CPatch::RedirectJump(0x645BD0, __create_arr                                                );
//	CPatch::RedirectJump(0x645C00, sub_645C00                                                  );
//	CPatch::RedirectJump(0x645C30, sub_645C30                                                  );
	//CPatch::RedirectJump(0x645C80, RpHAnimPluginAttach                                         );
//	CPatch::RedirectJump(0x645CF0, HAnimOpen                                                   );
//	CPatch::RedirectJump(0x645D90, HAnimClose                                                  );
//	CPatch::RedirectJump(0x645DC0, HAnimConstructor                                            );
//	CPatch::RedirectJump(0x645DE0, HAnimDestructor                                             );
//	CPatch::RedirectJump(0x645EA0, HAnimCopy                                                   );
//	CPatch::RedirectJump(0x645F40, HAnimWrite                                                  );
//	CPatch::RedirectJump(0x646070, HAnimRead                                                   );
//	CPatch::RedirectJump(0x646250, HAnimSize                                                   );
	CPatch::RedirectJump(0x646280, RpHAnimHierarchyCreate                                      );
	CPatch::RedirectJump(0x646370, RpHAnimHierarchyGetMatrixArray                              );
	CPatch::RedirectJump(0x646380, RpHAnimFrameGetHierarchy                                    );
	CPatch::RedirectJump(0x646390, RpHAnimIDGetIndex                                           );
	CPatch::RedirectJump(0x6463C0, RpHAnimHierarchyUpdateMatrices                              );
//	CPatch::RedirectJump(0x646D70, VectorMultPoint                                             );
//	CPatch::RedirectJump(0x646DB0, VectorTransformPoints                                       );
//	CPatch::RedirectJump(0x646E70, VectorMultVectors                                           );
	CPatch::RedirectJump(0x646F20, RwV3dNormalize                                              );
	CPatch::RedirectJump(0x647030, RwV3dLength                                                 );
	CPatch::RedirectJump(0x6470A0, _rwSqrt                                                     );
	CPatch::RedirectJump(0x647100, _rwInvSqrt                                                  );
	CPatch::RedirectJump(0x647160, RwV3dTransformPoints                                        );
	CPatch::RedirectJump(0x647170, RwV3dTransformVectors                                       );
//	CPatch::RedirectJump(0x647180, _rwVectorClose                                              );
//	CPatch::RedirectJump(0x6471F0, _rwVectorOpen                                               );
//	CPatch::RedirectJump(0x6473E0, sub_6473E0                                                  );
//	CPatch::RedirectJump(0x647720, sub_647720                                                  );
//	CPatch::RedirectJump(0x6478D0, sub_6478D0                                                  );
//	CPatch::RedirectJump(0x647B00, sub_647B00                                                  );
//	CPatch::RedirectJump(0x647DD0, sub_647DD0                                                  );
//	CPatch::RedirectJump(0x647EA0, sub_647EA0                                                  );
//	CPatch::RedirectJump(0x648390, sub_648390                                                  );
//	CPatch::RedirectJump(0x648A40, sub_648A40                                                  );
//	CPatch::RedirectJump(0x648A70, sub_648A70                                                  );
//	CPatch::RedirectJump(0x648AC0, printf                                                      );
//	CPatch::RedirectJump(0x648B30, CStlError_ErrorMessage                                      );
//	CPatch::RedirectJump(0x648BA0, sub_648BA0                                                  );
//	CPatch::RedirectJump(0x648BF0, vsprintf                                                    );
//	CPatch::RedirectJump(0x648C10, sprintf                                                     );
	CPatch::RedirectJump(0x648C50, RpSkinPluginAttach                                          );
//	CPatch::RedirectJump(0x648D10, SkinOpen                                                    );
//	CPatch::RedirectJump(0x648DC0, SkinClose                                                   );
//	CPatch::RedirectJump(0x648E10, SkinGeometryConstructor                                     );
//	CPatch::RedirectJump(0x648E30, SkinGeometryDestructor                                      );
//	CPatch::RedirectJump(0x648E90, SkinGeometryCopy                                            );
//	CPatch::RedirectJump(0x648EA0, SkinAtomicConstructor                                       );
//	CPatch::RedirectJump(0x648EC0, SkinAtomicDestructor                                        );
//	CPatch::RedirectJump(0x648EE0, SkinAtomicCopy                                              );
//	CPatch::RedirectJump(0x648F00, SkinAtomicAlways                                            );
//	CPatch::RedirectJump(0x648F90, SkinAtomicRights                                            );
//	CPatch::RedirectJump(0x649000, SkinGeometrySize                                            );
//	CPatch::RedirectJump(0x649050, SkinGeometryWrite                                           );
//	CPatch::RedirectJump(0x649140, SkinGeometryRead                                            );
//	CPatch::RedirectJump(0x6494E0, SkinFindNumUsedBones                                        );
//	CPatch::RedirectJump(0x6495B0, SkinCreateSkinData                                          );
//	CPatch::RedirectJump(0x6496C0, SkinAtomicRead                                              );
//	CPatch::RedirectJump(0x649910, SkinAtomicWrite                                             );
//	CPatch::RedirectJump(0x649920, SkinAtomicGetSize                                           );
	CPatch::RedirectJump(0x649930, RpSkinAtomicSetHAnimHierarchy                               );
	CPatch::RedirectJump(0x649950, RpSkinAtomicGetHAnimHierarchy                               );
	CPatch::RedirectJump(0x649960, RpSkinGeometryGetSkin                                       );
	CPatch::RedirectJump(0x649970, RpSkinGeometrySetSkin                                       );
	CPatch::RedirectJump(0x6499C0, RpSkinGetNumBones                                           );
	CPatch::RedirectJump(0x6499D0, RpSkinGetVertexBoneWeights                                  );
	CPatch::RedirectJump(0x6499E0, RpSkinGetSkinToBoneMatrices                                 );
//	CPatch::RedirectJump(0x6499F0, rand                                                        );
//	CPatch::RedirectJump(0x649A30, sub_649A30                                                  );
//	CPatch::RedirectJump(0x649A40, powf                                                        );
//	CPatch::RedirectJump(0x649A60, sub_649A60                                                  );
	CPatch::RedirectJump(0x649B80, RwIm2DGetNearScreenZ                                        );
	CPatch::RedirectJump(0x649B90, RwIm2DGetFarScreenZ                                         );
	CPatch::RedirectJump(0x649BA0, RwRenderStateSet                                            );
	CPatch::RedirectJump(0x649BF0, RwRenderStateGet                                            );
	CPatch::RedirectJump(0x649C00, RwIm2DRenderLine                                            );
	CPatch::RedirectJump(0x649C10, RwIm2DRenderPrimitive                                       );
	CPatch::RedirectJump(0x649C20, RwIm2DRenderIndexedPrimitive                                );
//	CPatch::RedirectJump(0x649C30, sub_649C30                                                  );
//	CPatch::RedirectJump(0x649EE0, sub_649EE0                                                  );
//	CPatch::RedirectJump(0x64A680, sub_64A680                                                  );
//	CPatch::RedirectJump(0x64A6E0, sub_64A6E0                                                  );
//	CPatch::RedirectJump(0x64A730, sscanf                                                      );
//	CPatch::RedirectJump(0x64A770, _rwCameraClose                                              );
//	CPatch::RedirectJump(0x64A7B0, _rwCameraOpen                                               );
	CPatch::RedirectJump(0x64A810, RwCameraEndUpdate                                           );
	CPatch::RedirectJump(0x64A820, RwCameraBeginUpdate                                         );
	CPatch::RedirectJump(0x64A830, RwCameraSetViewOffset                                       );
	CPatch::RedirectJump(0x64A860, RwCameraSetNearClipPlane                                    );
//	CPatch::RedirectJump(0x64A890, CameraUpdateZShiftScale                                     );
	CPatch::RedirectJump(0x64A930, RwCameraSetFarClipPlane                                     );
	CPatch::RedirectJump(0x64A960, RwCameraFrustumTestSphere                                   );
	CPatch::RedirectJump(0x64A9D0, RwCameraClear                                               );
	CPatch::RedirectJump(0x64AA00, RwCameraShowRaster                                          );
	CPatch::RedirectJump(0x64AA30, RwCameraSetProjection                                       );
	CPatch::RedirectJump(0x64AAA0, RwCameraSetViewWindow                                       );
	CPatch::RedirectJump(0x64AAE0, RwCameraRegisterPlugin                                      );
	CPatch::RedirectJump(0x64AB10, RwCameraDestroy                                             );
	CPatch::RedirectJump(0x64AB50, RwCameraCreate                                              );
//	CPatch::RedirectJump(0x64AC00, CameraSync                                                  );
//	CPatch::RedirectJump(0x64ADA0, CameraBuildPerspClipPlanes                                  );
//	CPatch::RedirectJump(0x64B440, CameraBuildParallelClipPlanes                               );
//	CPatch::RedirectJump(0x64B850, CameraBuildParallelViewMatrix                               );
//	CPatch::RedirectJump(0x64B9A0, CameraEndUpdate                                             );
//	CPatch::RedirectJump(0x64B9D0, CameraBeginUpdate                                           );
//	CPatch::RedirectJump(0x64BA10, sub_64BA10                                                  );
//	CPatch::RedirectJump(0x64C820, sub_64C820                                                  );
//	CPatch::RedirectJump(0x64C8E0, atof                                                        );
//	CPatch::RedirectJump(0x64C8F0, _rpGeometryOpen                                             );
//	CPatch::RedirectJump(0x64C910, _rpGeometryClose                                            );
	CPatch::RedirectJump(0x64C920, RpMorphTargetCalcBoundingSphere                             );
	CPatch::RedirectJump(0x64CA30, RpGeometryAddMorphTargets                                   );
	CPatch::RedirectJump(0x64CBF0, RpGeometryAddMorphTarget                                    );
	CPatch::RedirectJump(0x64CC00, RpGeometryTriangleSetVertexIndices                          );
	CPatch::RedirectJump(0x64CC30, RpGeometryTriangleSetMaterial                               );
	CPatch::RedirectJump(0x64CC90, RpGeometryForAllMaterials                                   );
	CPatch::RedirectJump(0x64CCD0, RpGeometryLock                                              );
	CPatch::RedirectJump(0x64CD00, RpGeometryUnlock                                            );
	CPatch::RedirectJump(0x64CDB0, RpGeometryCreate                                            );
	CPatch::RedirectJump(0x64CFD0, RpGeometryAddRef                                            );
	CPatch::RedirectJump(0x64CFE0, RpGeometryDestroy                                           );
	CPatch::RedirectJump(0x64D080, RpGeometryRegisterPlugin                                    );
	CPatch::RedirectJump(0x64D0B0, RpGeometryRegisterPluginStream                              );
	CPatch::RedirectJump(0x64D0E0, RpGeometryStreamRead                                        );
//	CPatch::RedirectJump(0x64D7C0, GeometryAnnihilate                                          );
	CPatch::RedirectJump(0x64D840, RtAnimInitialize                                            );
//	CPatch::RedirectJump(0x64D870, AnimOpen                                                    );
//	CPatch::RedirectJump(0x64D8A0, AnimClose                                                   );
	CPatch::RedirectJump(0x64D8D0, RtAnimRegisterInterpolationScheme                           );
	//CPatch::RedirectJump(0x64D970, RtAnimAnimationCreate                                       );
	CPatch::RedirectJump(0x64DA20, RtAnimAnimationDestroy                                      );
	CPatch::RedirectJump(0x64DA60, RtAnimInterpolatorCreate                                    );
	CPatch::RedirectJump(0x64DAC0, RtAnimInterpolatorDestroy                                   );
//	CPatch::RedirectJump(0x64DAD0, RtAnimInterpolatorSetCurrentAnim                            ); // moved to hanim hook
//	CPatch::RedirectJump(0x64DB70, memmove                                                     );
//	CPatch::RedirectJump(0x64DBF0, memcpy                                                      );
//	CPatch::RedirectJump(0x64DC30, memset                                                      );
	CPatch::RedirectJump(0x64DC60, RwTextureSetAutoMipmapping                                  );
	CPatch::RedirectJump(0x64DC80, RwTextureGetAutoMipmapping                                  );
	CPatch::RedirectJump(0x64DC90, RwTextureSetMipmapping                                      );
	CPatch::RedirectJump(0x64DCB0, RwTextureGetMipmapping                                      );
	CPatch::RedirectJump(0x64DCC0, RwTextureSetRaster                                          );
	CPatch::RedirectJump(0x64DCF0, RwTexDictionaryCreate                                       );
	CPatch::RedirectJump(0x64DD90, RwTexDictionaryDestroy                                      );
	CPatch::RedirectJump(0x64DE20, RwTexDictionaryForAllTextures                               );
	CPatch::RedirectJump(0x64DE60, RwTextureCreate                                             );
	CPatch::RedirectJump(0x64DEC0, RwTextureDestroy                                            );
	CPatch::RedirectJump(0x64DF40, RwTextureSetName                                            );
	CPatch::RedirectJump(0x64DFB0, RwTextureSetMaskName                                        );
	CPatch::RedirectJump(0x64E020, RwTexDictionaryAddTexture                                   );
	CPatch::RedirectJump(0x64E060, RwTexDictionaryFindNamedTexture                             );
	CPatch::RedirectJump(0x64E0E0, RwTexDictionarySetCurrent                                   );
	CPatch::RedirectJump(0x64E100, RwTexDictionaryGetCurrent                                   );
	CPatch::RedirectJump(0x64E110, RwTextureRead                                               );
	CPatch::RedirectJump(0x64E310, RwTextureRegisterPlugin                                     );
	CPatch::RedirectJump(0x64E340, RwTextureRasterGenerateMipmaps                              );
//	CPatch::RedirectJump(0x64E370, _rwTextureClose                                             );
//	CPatch::RedirectJump(0x64E4D0, _rwTextureOpen                                              );
//	CPatch::RedirectJump(0x64E690, TextureDefaultMipmapName                                    );
//	CPatch::RedirectJump(0x64E700, TextureDefaultRead                                          );
//	CPatch::RedirectJump(0x64EAD0, PalettizeMipmaps                                            );
//	CPatch::RedirectJump(0x64EC70, TextureImageReadAndSize                                     );
//	CPatch::RedirectJump(0x64F0A0, TextureDefaultMipmapRead                                    );
//	CPatch::RedirectJump(0x64F700, TextureRasterDefaultBuildMipmaps                            );
//	CPatch::RedirectJump(0x64F990, _rwStreamReadChunkHeader                                    );
	CPatch::RedirectJump(0x64FA60, _rwStreamWriteVersionedChunkHeader                          );
	CPatch::RedirectJump(0x64FAC0, RwStreamFindChunk                                           );
//	CPatch::RedirectJump(0x64FBC0, RwMemLittleEndian32                                         );
//	CPatch::RedirectJump(0x64FBD0, RwMemNative32                                               );
//	CPatch::RedirectJump(0x64FBE0, RwMemRealToFloat32                                          );
//	CPatch::RedirectJump(0x64FC00, RwMemFloat32ToReal                                          );
	CPatch::RedirectJump(0x64FC20, RwStreamWriteReal                                           );
	CPatch::RedirectJump(0x64FCC0, RwStreamWriteInt32                                          );
	CPatch::RedirectJump(0x64FCE0, RwStreamReadReal                                            );
	CPatch::RedirectJump(0x64FD50, RwStreamReadInt32                                           );
//	CPatch::RedirectJump(0x64FDA0, sub_64FDA0                                                  );
//	CPatch::RedirectJump(0x650050, sub_650050                                                  );
//	CPatch::RedirectJump(0x6503B0, sub_6503B0                                                  );
//	CPatch::RedirectJump(0x650460, atoi                                                        );
	CPatch::RedirectJump(0x650480, RwTextureRegisterPluginStream                               );
	CPatch::RedirectJump(0x6504B0, RwTextureStreamGetSize                                      );
	CPatch::RedirectJump(0x650520, RwTextureStreamWrite                                        );
	CPatch::RedirectJump(0x6506F0, RwTextureStreamRead                                         );
//	CPatch::RedirectJump(0x650B80, UnicodeStringStreamRead                                     );
//	CPatch::RedirectJump(0x650C70, addNativeTextureSize                                        );
	CPatch::RedirectJump(0x650CD0, RwTexDictionaryStreamWrite                                  );
//	CPatch::RedirectJump(0x650DF0, sub_650DF0                                                  );
//	CPatch::RedirectJump(0x650E00, writeNativeTexture                                          );
//	CPatch::RedirectJump(0x650EC0, _rwImageOpen                                                );
//	CPatch::RedirectJump(0x651110, _rwImageClose                                               );
	CPatch::RedirectJump(0x651250, RwImageCreate                                               );
	CPatch::RedirectJump(0x6512B0, RwImageDestroy                                              );
	CPatch::RedirectJump(0x651310, RwImageAllocatePixels                                       );
	CPatch::RedirectJump(0x6513D0, RwImageFreePixels                                           );
	CPatch::RedirectJump(0x651400, RwImageMakeMask                                             );
	CPatch::RedirectJump(0x6514D0, RwImageApplyMask                                            );
	CPatch::RedirectJump(0x651880, RwImageSetPath                                              );
	CPatch::RedirectJump(0x651940, RwImageRead                                                 );
//	CPatch::RedirectJump(0x651A30, ImagePathForAllFullNames                                    );
//	CPatch::RedirectJump(0x651B80, ImageGetScratchMem                                          );
//	CPatch::RedirectJump(0x651C30, ImageAttempRead                                             );
	CPatch::RedirectJump(0x651C70, RwImageFindFileType                                         );
//	CPatch::RedirectJump(0x651CA0, ImageDetermineExtender                                      );
	CPatch::RedirectJump(0x651D40, RwImageReadMaskedImage                                      );
//	CPatch::RedirectJump(0x651EC0, ImageStraightCopy                                           );
//	CPatch::RedirectJump(0x651F70, ImageConvertDepth                                           );
	CPatch::RedirectJump(0x652080, RwImageCopy                                                 );
	CPatch::RedirectJump(0x652260, RwImageGammaCorrect                                         );
	CPatch::RedirectJump(0x6523F0, RwImageSetGamma                                             );
//	CPatch::RedirectJump(0x652540, fclose                                                      );
//	CPatch::RedirectJump(0x6525D0, fflush                                                      );
//	CPatch::RedirectJump(0x6526B0, fopen                                                       );
//	CPatch::RedirectJump(0x6526F0, sub_6526F0                                                  );
//	CPatch::RedirectJump(0x6527B0, sub_6527B0                                                  );
//	CPatch::RedirectJump(0x6528C0, strncmp_chrs1                                               );
//	CPatch::RedirectJump(0x652940, sub_652940                                                  );
//	CPatch::RedirectJump(0x652A30, fgets                                                       );
//	CPatch::RedirectJump(0x652AF0, sub_652AF0                                                  );
//	CPatch::RedirectJump(0x652C20, fputs                                                       );
//	CPatch::RedirectJump(0x652CB0, sub_652CB0                                                  );
//	CPatch::RedirectJump(0x652D50, sub_652D50                                                  );
//	CPatch::RedirectJump(0x652D80, sub_652D80                                                  );
//	CPatch::RedirectJump(0x652E60, fseek                                                       );
//	CPatch::RedirectJump(0x652EA0, sub_652EA0                                                  );
//	CPatch::RedirectJump(0x652EC0, fread                                                       );
//	CPatch::RedirectJump(0x652F00, sub_652F00                                                  );
//	CPatch::RedirectJump(0x6531B0, fwrite                                                      );
//	CPatch::RedirectJump(0x6531F0, sub_6531F0                                                  );
//	CPatch::RedirectJump(0x653490, sub_653490                                                  );
//	CPatch::RedirectJump(0x653510, sub_653510                                                  );
//	CPatch::RedirectJump(0x653530, _rpLightTieDestroy                                          );
//	CPatch::RedirectJump(0x653580, _rpTieDestroy                                               );
//	CPatch::RedirectJump(0x6535E0, _rpWorldObjRegisterExtensions                               );
//	CPatch::RedirectJump(0x6537E0, WorldObjectOpen                                             );
//	CPatch::RedirectJump(0x6538B0, WorldObjectClose                                            );
//	CPatch::RedirectJump(0x653920, WorldInitCameraExt                                          );
//	CPatch::RedirectJump(0x653970, WorldCameraBeginUpdate                                      );
//	CPatch::RedirectJump(0x6539A0, WorldCameraEndUpdate                                        );
//	CPatch::RedirectJump(0x6539C0, WorldCameraSync                                             );
//	CPatch::RedirectJump(0x653C50, WorldCopyCameraExt                                          );
//	CPatch::RedirectJump(0x653CA0, WorldDeInitCameraExt                                        );
//	CPatch::RedirectJump(0x653CF0, WorldInitAtomicExt                                          );
//	CPatch::RedirectJump(0x653D20, WorldAtomicSync                                             );
//	CPatch::RedirectJump(0x653F00, WorldCopyAtomicExt                                          );
//	CPatch::RedirectJump(0x653F10, WorldDeInitAtomicExt                                        );
//	CPatch::RedirectJump(0x653F90, WorldInitClumpExt                                           );
//	CPatch::RedirectJump(0x653FB0, WorldCopyClumpExt                                           );
//	CPatch::RedirectJump(0x653FE0, WorldDeInitClumpExt                                         );
//	CPatch::RedirectJump(0x653FF0, WorldInitLightExt                                           );
//	CPatch::RedirectJump(0x654010, WorldLightSync                                              );
//	CPatch::RedirectJump(0x654210, WorldCopyLightExt                                           );
//	CPatch::RedirectJump(0x654270, WorldDeInitLightExt                                         );
//	CPatch::RedirectJump(0x6542D0, writeGeometryMesh                                           );
//	CPatch::RedirectJump(0x6542F0, readGeometryMesh                                            );
//	CPatch::RedirectJump(0x654320, sizeGeometryMesh                                            );
//	CPatch::RedirectJump(0x654340, writeGeometryNative                                         );
//	CPatch::RedirectJump(0x654360, readGeometryNative                                          );
//	CPatch::RedirectJump(0x654380, sizeGeometryNative                                          );
//	CPatch::RedirectJump(0x654390, writeWorldSectorNative                                      );
//	CPatch::RedirectJump(0x6543B0, readWorldSectorNative                                       );
//	CPatch::RedirectJump(0x6543D0, sizeWorldSectorNative                                       );
//	CPatch::RedirectJump(0x6543E0, writeSectorMesh                                             );
//	CPatch::RedirectJump(0x654410, readSectorMesh                                              );
//	CPatch::RedirectJump(0x654440, sizeSectorMesh                                              );
	CPatch::RedirectJump(0x654460, RpWorldAddCamera                                            );
	CPatch::RedirectJump(0x654490, RpWorldRemoveCamera                                         );
	CPatch::RedirectJump(0x6544F0, RpAtomicGetWorld                                            );
	CPatch::RedirectJump(0x654500, RpWorldAddClump                                             );
//	CPatch::RedirectJump(0x6545B0, WorldAddClumpAtomic                                         );
//	CPatch::RedirectJump(0x6545F0, WorldAddClumpLight                                          );
//	CPatch::RedirectJump(0x654640, WorldAddClumpCamera                                         );
	CPatch::RedirectJump(0x654680, RpWorldAddLight                                             );
	CPatch::RedirectJump(0x6546D0, RpWorldRemoveLight                                          );
	CPatch::RedirectJump(0x654750, _rpSectorDefaultRenderCallBack                              );
	CPatch::RedirectJump(0x6547A0, RpWorldUnlock                                               );
	CPatch::RedirectJump(0x6548C0, RpWorldSectorGetWorld                                       );
	CPatch::RedirectJump(0x654950, RpWorldDestroy                                              );
	CPatch::RedirectJump(0x654A70, _rpWorldSectorDeinstanceAll                                 );
	CPatch::RedirectJump(0x654B20, _rpWorldSectorDestroyRecurse                                );
	CPatch::RedirectJump(0x654C90, RpWorldCreate                                               );
	CPatch::RedirectJump(0x655010, RpWorldRegisterPlugin                                       );
	CPatch::RedirectJump(0x655040, RpWorldRegisterPluginStream                                 );
	CPatch::RedirectJump(0x655070, RpWorldPluginAttach                                         );
//	CPatch::RedirectJump(0x655160, WorldClose                                                  );
//	CPatch::RedirectJump(0x6551B0, WorldOpen                                                   );
	CPatch::RedirectJump(0x655230, RwRasterGetCurrentContext                                   );
	CPatch::RedirectJump(0x655250, RwRasterUnlock                                              );
	CPatch::RedirectJump(0x655270, RwRasterRenderFast                                          );
	CPatch::RedirectJump(0x6552B0, RwRasterRender                                              );
	CPatch::RedirectJump(0x6552E0, RwRasterDestroy                                             );
	CPatch::RedirectJump(0x655320, RwRasterPushContext                                         );
	CPatch::RedirectJump(0x655370, RwRasterRegisterPlugin                                      );
	CPatch::RedirectJump(0x6553A0, RwRasterLockPalette                                         );
	CPatch::RedirectJump(0x6553D0, RwRasterPopContext                                          );
	CPatch::RedirectJump(0x655420, RwRasterGetNumLevels                                        );
	CPatch::RedirectJump(0x655460, RwRasterShowRaster                                          );
	CPatch::RedirectJump(0x655490, RwRasterCreate                                              );
	CPatch::RedirectJump(0x655530, RwRasterLock                                                );
//	CPatch::RedirectJump(0x655570, _rwRasterClose                                              );
//	CPatch::RedirectJump(0x6555B0, _rwRasterOpen                                               );
//	CPatch::RedirectJump(0x6556C0, _rpMaterialSetDefaultSurfaceProperties                      );
//	CPatch::RedirectJump(0x655710, _rpMaterialOpen                                             );
//	CPatch::RedirectJump(0x655770, _rpMaterialClose                                            );
	CPatch::RedirectJump(0x6557B0, RpMaterialCreate                                            );
	CPatch::RedirectJump(0x655830, RpMaterialDestroy                                           );
	CPatch::RedirectJump(0x655890, RpMaterialSetTexture                                        );
	CPatch::RedirectJump(0x6558C0, RpMaterialRegisterPlugin                                    );
	CPatch::RedirectJump(0x6558F0, RpMaterialRegisterPluginStream                              );
	CPatch::RedirectJump(0x655920, RpMaterialStreamRead                                        );
//	CPatch::RedirectJump(0x655C40, _rpMatFXTextureMaskCreate                                   );
//  CPatch::RedirectJump(0x655EB0, RpMatFXPluginAttach                                         ); // Moved to matfx hook
//	CPatch::RedirectJump(0x655FC0, MatFXClose                                                  );
//	CPatch::RedirectJump(0x656000, MatFXOpen                                                   );
//	CPatch::RedirectJump(0x656050, MatFXMaterialConstructor                                    );
//	CPatch::RedirectJump(0x656070, MatFXMaterialDestructor                                     );
//	CPatch::RedirectJump(0x6560B0, MatFXMaterialDataClean                                      );
//	CPatch::RedirectJump(0x656110, MatFXMaterialCopy                                           );
//	CPatch::RedirectJump(0x656520, MatFXGetData                                                );
//	CPatch::RedirectJump(0x656570, MatFXGetConstData                                           );
//	CPatch::RedirectJump(0x6565C0, MatFXMaterialStreamWrite                                    );
//	CPatch::RedirectJump(0x6567E0, MatFXMaterialStreamRead                                     );
//	CPatch::RedirectJump(0x656D30, MatFXMaterialStreamGetSize                                  );
//	CPatch::RedirectJump(0x656DC0, MatFXAtomicConstructor                                      );
//	CPatch::RedirectJump(0x656DE0, MatFXAtomicDestructor                                       );
//	CPatch::RedirectJump(0x656E00, MatFXAtomicCopy                                             );
//	CPatch::RedirectJump(0x656E50, MatFXAtomicStreamWrite                                      );
//	CPatch::RedirectJump(0x656E80, MatFXAtomicStreamRead                                       );
//	CPatch::RedirectJump(0x656ED0, MatFXAtomicStreamGetSize                                    );
//	CPatch::RedirectJump(0x656EF0, MatFXWorldSectorConstructor                                 );
//	CPatch::RedirectJump(0x656F10, MatFXWorldSectorDestructor                                  );
//	CPatch::RedirectJump(0x656F30, MatFXWorldSectorCopy                                        );
//	CPatch::RedirectJump(0x656F80, MatFXWorldSectorStreamWrite                                 );
//	CPatch::RedirectJump(0x656FB0, MatFXWorldSectorStreamRead                                  );
//	CPatch::RedirectJump(0x657000, MatFXWorldSectorStreamGetSize                               );
	CPatch::RedirectJump(0x657020, RpMatFXAtomicEnableEffects                                  );
	CPatch::RedirectJump(0x657050, RpMatFXMaterialSetEffects                                   );
	CPatch::RedirectJump(0x657180, RpMatFXMaterialSetupEnvMap                                  );
	CPatch::RedirectJump(0x6572F0, RpMatFXMaterialGetEffects                                   );
	CPatch::RedirectJump(0x657310, RpMatFXMaterialSetBumpMapTexture                            );
	//CPatch::RedirectJump(0x6574D0, RpMatFXMaterialSetBumpMapFrame                              ); // Stick to R*s hook here
	//CPatch::RedirectJump(0x657530, RpMatFXMaterialGetBumpMapBumpedTexture                      );
	CPatch::RedirectJump(0x6575A0, RpMatFXMaterialGetEnvMapCoefficient                         );
	CPatch::RedirectJump(0x6575F0, RpMatFXMaterialSetDualTexture                               );
	CPatch::RedirectJump(0x657660, RpAnisotGetMaxSupportedMaxAnisotropy                        );
	CPatch::RedirectJump(0x657670, RpAnisotTextureSetMaxAnisotropy                             );
	CPatch::RedirectJump(0x6576A0, RpAnisotTextureGetMaxAnisotropy                             );
	CPatch::RedirectJump(0x6576C0, RpAnisotPluginAttach                                        );
//	CPatch::RedirectJump(0x657740, anisotOpen                                                  );
//	CPatch::RedirectJump(0x657750, anisotClose                                                 );
//	CPatch::RedirectJump(0x657760, anisotConstruct                                             );
//	CPatch::RedirectJump(0x657770, anisotDestruct                                              );
//	CPatch::RedirectJump(0x657780, anisotCopy                                                  );
//	CPatch::RedirectJump(0x6577A0, anisotRead                                                  );
//	CPatch::RedirectJump(0x657800, anisotWrite                                                 );
//	CPatch::RedirectJump(0x657840, anisotGetSize                                               );
	CPatch::RedirectJump(0x657870, RtBMPImageRead                                              );
//	CPatch::RedirectJump(0x657E10, BMPImageSetSpan                                             );
//	CPatch::RedirectJump(0x6581D0, _rwD3D9RenderStateFlushCache                                );
	CPatch::RedirectJump(0x6582A0, RwD3D9SetRenderState                                        );
	CPatch::RedirectJump(0x6582F0, RwD3D9GetRenderState                                        );
	CPatch::RedirectJump(0x658310, RwD3D9SetTextureStageState                                  );
//	CPatch::RedirectJump(0x658370, _rwD3D9RenderStateOpen                                      );
//	CPatch::RedirectJump(0x658840, _rwD3D9RenderStateReset                                     );
//	CPatch::RedirectJump(0x658F10, _rwD3D9RWGetRenderState                                     );
//	CPatch::RedirectJump(0x659170, _rwD3D9RenderStateTextureFilter                             );
//	CPatch::RedirectJump(0x6592D0, _rwD3D9RenderStateSrcBlend                                  );
//	CPatch::RedirectJump(0x659320, _rwD3D9RenderStateDestBlend                                 );
//	CPatch::RedirectJump(0x659370, _rwD3D9RWSetRasterStage                                     );
//	CPatch::RedirectJump(0x659840, _rwD3D9RWGetRasterStage                                     );
	CPatch::RedirectJump(0x659850, RwD3D9SetTexture                                            );
//	CPatch::RedirectJump(0x659CF0, _rwD3D9RenderStateVertexAlphaEnable                         );
//	CPatch::RedirectJump(0x659F60, _rwD3D9RenderStateIsVertexAlphaEnable                       );
//	CPatch::RedirectJump(0x659F70, _rwD3D9RenderStateStencilEnable                             );
//	CPatch::RedirectJump(0x659FC0, _rwD3D9RenderStateStencilFail                               );
//	CPatch::RedirectJump(0x65A010, _rwD3D9RenderStateStencilZFail                              );
//	CPatch::RedirectJump(0x65A060, _rwD3D9RenderStateStencilPass                               );
//	CPatch::RedirectJump(0x65A0B0, _rwD3D9RenderStateStencilFunction                           );
//	CPatch::RedirectJump(0x65A100, _rwD3D9RenderStateStencilFunctionRef                        );
//	CPatch::RedirectJump(0x65A150, _rwD3D9RenderStateStencilFunctionMask                       );
//	CPatch::RedirectJump(0x65A1A0, _rwD3D9RenderStateStencilFunctionWriteMask                  );
//	CPatch::RedirectJump(0x65A1F0, _rwD3D9RWSetRenderState                                     );
//	CPatch::RedirectJump(0x65A720, rwD3D9RenderStateZWriteEnable                               );
//	CPatch::RedirectJump(0x65A820, rwD3D9RenderStateZTestEnable                                );
//	CPatch::RedirectJump(0x65A920, rwD3D9RenderStateShadeMode                                  );
//	CPatch::RedirectJump(0x65A970, rwD3D9RenderStateBorderColor                                );
//	CPatch::RedirectJump(0x65A9D0, rwD3D9RenderStateCullMode                                   );
//	CPatch::RedirectJump(0x65AA20, sub_65AA20                                                  );
//	CPatch::RedirectJump(0x65AA90, sub_65AA90                                                  );
//	CPatch::RedirectJump(0x65AB50, sub_65AB50                                                  );
	CPatch::RedirectJump(0x65ABD0, RtQuatRotate                                                );
	CPatch::RedirectJump(0x65AE90, RwIm3DTransform                                             );
	CPatch::RedirectJump(0x65AF60, RwIm3DEnd                                                   );
	CPatch::RedirectJump(0x65AF90, RwIm3DRenderIndexedPrimitive                                );
	CPatch::RedirectJump(0x65B0F0, RwIm3DRenderLine                                            );
	CPatch::RedirectJump(0x65B1C0, RwIm3DSetTransformPipeline                                  );
	CPatch::RedirectJump(0x65B210, RwIm3DSetRenderPipeline                                     );
//	CPatch::RedirectJump(0x65B4D0, _rwIm3DClose                                                );
//	CPatch::RedirectJump(0x65B510, _rwIm3DOpen                                                 );
	CPatch::RedirectJump(0x65B5C0, _rwDeviceRegisterPlugin                                     );
//	CPatch::RedirectJump(0x65B5D0, D3D9System                                                  );
//	CPatch::RedirectJump(0x65BDE0, D3D9DynamicVertexBufferListDestroy                          );
//	CPatch::RedirectJump(0x65BE60, D3D9VertexShaderListDestroy                                 );
//	CPatch::RedirectJump(0x65BEE0, D3D9PixelShaderListDestroy                                  );
//	CPatch::RedirectJump(0x65BF60, D3D9CalculateMaxMultisamplingLevels                         );
//	CPatch::RedirectJump(0x65BFC0, D3D9DeviceSystemStart                                       );
//	CPatch::RedirectJump(0x65C550, D3D9DynamicVertexBufferManagerCreate                        );
//	CPatch::RedirectJump(0x65C610, D3D9DeviceSystemStandards                                   );
//	CPatch::RedirectJump(0x65C860, D3D9NullStandard                                            );
//	CPatch::RedirectJump(0x65C870, D3D9CreateDisplayModesList                                  );
//	CPatch::RedirectJump(0x65CA00, _rwD3D9CameraClear                                          );
//	CPatch::RedirectJump(0x65D6D0, _rwD3D9BeginScene                                           );
//	CPatch::RedirectJump(0x65DA70, D3D9DynamicVertexBufferListRelease                          );
//	CPatch::RedirectJump(0x65DAC0, D3D9PixelShaderListRelease                                  );
//	CPatch::RedirectJump(0x65DB00, D3D9DynamicVertexBufferManagerDestroy                       );
//	CPatch::RedirectJump(0x65DB60, D3D9RestoreCacheLights                                      );
	CPatch::RedirectJump(0x65DBC0, RwD3D9EngineSetRefreshRate                                  );
	CPatch::RedirectJump(0x65DC30, RwD3D9CameraAttachWindow                                    );
//	CPatch::RedirectJump(0x65DDA0, _rwD3D9CameraBeginUpdate                                    );
//	CPatch::RedirectJump(0x65EA50, _rwD3D9CameraEndUpdate                                      );
//	CPatch::RedirectJump(0x65EB50, _rwD3D9RasterShowRaster                                     );
//	CPatch::RedirectJump(0x65EFD0, D3D9DynamicVertexBufferListRestore                          );
//	CPatch::RedirectJump(0x65F040, D3D9VertexShaderListRelease                                 );
//	CPatch::RedirectJump(0x65F090, D3D9VertexShaderListRestore                                 );
//	CPatch::RedirectJump(0x65F0F0, D3D9PixelShaderListRestore                                  );
	CPatch::RedirectJump(0x65F140, RwD3D9GetCurrentD3DDevice                                   );
//	CPatch::RedirectJump(0x65F1E0, _rwDeviceGetHandle                                          );
	CPatch::RedirectJump(0x65F1F0, RwD3D9DeviceSupportsDXTTexture                              );
	CPatch::RedirectJump(0x65F2F0, RwD3D9SetVertexShader                                       );
	CPatch::RedirectJump(0x65F330, RwD3D9SetPixelShader                                        );
	CPatch::RedirectJump(0x65F370, RwD3D9SetStreamSource                                       );
	CPatch::RedirectJump(0x65F3C0, RwD3D9SetIndices                                            ); // different params D3D8-D3D9
	CPatch::RedirectJump(0x65F410, RwD3D9DrawIndexedPrimitive                                  ); // different params D3D8-D3D9
	CPatch::RedirectJump(0x65F4A0, RwD3D9DrawPrimitive                                         );
	CPatch::RedirectJump(0x65F530, RwD3D9SetTransform                                          );
	CPatch::RedirectJump(0x65F670, RwD3D9GetTransform                                          );
	CPatch::RedirectJump(0x65F6A0, RwD3D9SetTransformWorld                                     );
	CPatch::RedirectJump(0x65F7F0, RwD3D9SetSurfaceProperties                                  );
	CPatch::RedirectJump(0x65FA20, _rwD3D9CheckValidZBufferFormat                              );
	CPatch::RedirectJump(0x65FAC0, _rwD3D9CheckValidCameraTextureFormat                        );
	CPatch::RedirectJump(0x65FB20, RwD3D9SetLight                                              );
	CPatch::RedirectJump(0x65FC10, RwD3D9EnableLight                                           );
//	CPatch::RedirectJump(0x65FC70, _rwD3D9LightsEqual                                          );
	CPatch::RedirectJump(0x65FD70, RwD3D9DynamicVertexBufferCreate                             ); // different params D3D8-D3D9
	CPatch::RedirectJump(0x65FE60, RwD3D9DynamicVertexBufferDestroy                            );
	CPatch::RedirectJump(0x65FE90, RwD3D9CreatePixelShader                                     );
	CPatch::RedirectJump(0x65FF00, RwD3D9DeletePixelShader                                     );
	CPatch::RedirectJump(0x65FF70, RwD3D9SetPixelShaderConstant                                );
	CPatch::RedirectJump(0x65FFA0, RwD3D9GetCaps                                               );
	CPatch::RedirectJump(0x65FFB0, RwD3D9CameraIsSphereFullyInsideFrustum                      );
	CPatch::RedirectJump(0x660010, RwD3D9CameraIsBBoxFullyInsideFrustum                        );
	CPatch::RedirectJump(0x6600A0, RwD3D9DynamicVertexBufferLock                               );
	CPatch::RedirectJump(0x660220, RwD3D9DynamicVertexBufferUnlock                             );
//	CPatch::RedirectJump(0x660240, __ptmf_scall                                                );
	CPatch::RedirectJump(0x660270, RwImageSetFromRaster                                        );
	CPatch::RedirectJump(0x6602B0, RwRasterSetFromImage                                        );
	CPatch::RedirectJump(0x6602E0, RwImageFindRasterFormat                                     );
	CPatch::RedirectJump(0x660350, RwFrameRegisterPluginStream                                 );
	CPatch::RedirectJump(0x660380, _rwFrameListDeinitialize                                    );
	CPatch::RedirectJump(0x6603B0, _rwFrameListStreamRead                                      );
	CPatch::RedirectJump(0x660660, RpLightSetRadius                                            );
	CPatch::RedirectJump(0x660680, RpLightSetColor                                             );
	CPatch::RedirectJump(0x6606D0, RpLightGetConeAngle                                         );
	CPatch::RedirectJump(0x660910, RpLightRegisterPlugin                                       );
	CPatch::RedirectJump(0x660940, RpLightStreamRead                                           );
	CPatch::RedirectJump(0x660AE0, RpLightDestroy                                              );
	CPatch::RedirectJump(0x660B20, RpLightCreate                                               );
//	CPatch::RedirectJump(0x660BB0, LightSync                                                   );
//	CPatch::RedirectJump(0x660BC0, _rpLightClose                                               );
//	CPatch::RedirectJump(0x660C20, LightTidyDestroyLight                                       );
//	CPatch::RedirectJump(0x660C60, _rpLightOpen                                                );
	CPatch::RedirectJump(0x660CC0, _rwObjectHasFrameSetFrame                                   );
	CPatch::RedirectJump(0x660D10, _rwObjectHasFrameReleaseFrame                               );
//	CPatch::RedirectJump(0x660D30, sub_660D30                                                  );
//	CPatch::RedirectJump(0x660D90, sub_660D90                                                  );
//	CPatch::RedirectJump(0x660E20, sub_660E20                                                  );
//	CPatch::RedirectJump(0x660EA0, sub_660EA0                                                  );
//	CPatch::RedirectJump(0x660F00, sub_660F00                                                  );
//	CPatch::RedirectJump(0x660F40, sub_660F40                                                  );
//	CPatch::RedirectJump(0x660FD0, sub_660FD0                                                  );
//	CPatch::RedirectJump(0x661050, sub_661050                                                  );
//	CPatch::RedirectJump(0x6610D0, sub_6610D0                                                  );
//	CPatch::RedirectJump(0x661100, sub_661100                                                  );
//	CPatch::RedirectJump(0x661140, sub_661140                                                  );
//	CPatch::RedirectJump(0x661190, sub_661190                                                  );
//	CPatch::RedirectJump(0x661210, sub_661210                                                  );
//	CPatch::RedirectJump(0x661290, sub_661290                                                  );
//	CPatch::RedirectJump(0x6612F0, sub_6612F0                                                  );
//	CPatch::RedirectJump(0x6613D0, sub_6613D0                                                  );
//	CPatch::RedirectJump(0x6613E0, sub_6613E0                                                  );
//	CPatch::RedirectJump(0x661410, sub_661410                                                  );
//	CPatch::RedirectJump(0x661580, sub_661580                                                  );
//	CPatch::RedirectJump(0x661650, sub_661650                                                  );
//	CPatch::RedirectJump(0x661690, sub_661690                                                  );
//	CPatch::RedirectJump(0x6616F0, sub_6616F0                                                  );
//	CPatch::RedirectJump(0x661870, malloc                                                      );
//	CPatch::RedirectJump(0x6618A0, free                                                        );
//	CPatch::RedirectJump(0x6618D0, realloc                                                     );
//	CPatch::RedirectJump(0x661910, sub_661910                                                  );
//	CPatch::RedirectJump(0x661940, sub_661940                                                  );
//	CPatch::RedirectJump(0x661950, sub_661950                                                  );
//	CPatch::RedirectJump(0x6619A0, sub_6619A0                                                  );
//	CPatch::RedirectJump(0x661A40, sub_661A40                                                  );
//	CPatch::RedirectJump(0x661A80, sub_661A80                                                  );
//	CPatch::RedirectJump(0x661BA0, sub_661BA0                                                  );
//	CPatch::RedirectJump(0x661D10, sub_661D10                                                  );
//	CPatch::RedirectJump(0x661D50, sub_661D50                                                  );
//	CPatch::RedirectJump(0x661D80, sub_661D80                                                  );
//	CPatch::RedirectJump(0x661DD0, sub_661DD0                                                  );
//	CPatch::RedirectJump(0x661DF0, sub_661DF0                                                  );
//	CPatch::RedirectJump(0x661E80, sub_661E80                                                  );
//	CPatch::RedirectJump(0x661EE0, sub_661EE0                                                  );
//	CPatch::RedirectJump(0x661F30, sub_661F30                                                  );
//	CPatch::RedirectJump(0x661F70, sub_661F70                                                  );
//	CPatch::RedirectJump(0x662010, sub_662010                                                  );
//	CPatch::RedirectJump(0x662100, snprintf                                                    );
//	CPatch::RedirectJump(0x662910, qsort                                                       );
//	CPatch::RedirectJump(0x663550, GetModuleHandleA                                            );
//	CPatch::RedirectJump(0x663556, DirectInput8Create                                          );
//	CPatch::RedirectJump(0x66355C, Direct3DCreate8                                             ); Must be replaced with AdapterRefreshRate
//	CPatch::RedirectJump(0x663562, DirectDrawCreateEx                                          ); Used to get video memory size
//	CPatch::RedirectJump(0x663568, LoadLibraryA                                                );
//	CPatch::RedirectJump(0x66356E, GetProcAddress                                              );
//	CPatch::RedirectJump(0x663580, RwOsGetFileInterface                                        ); Deprecated with RW 3.7, must be replaced with FileSystem
//	CPatch::RedirectJump(0x663590, _rwFileSystemOpen                                           ); Deprecated with RW 3.7
//	CPatch::RedirectJump(0x663650, _rwfexist                                                   ); Deprecated with RW 3.7, must be replaced with FileSystem
//	CPatch::RedirectJump(0x663690, sub_663690                                                  );
//	CPatch::RedirectJump(0x6636A0, sub_6636A0                                                  );
//	CPatch::RedirectJump(0x663700, sub_663700                                                  );
//	CPatch::RedirectJump(0x6637A0, sub_6637A0                                                  );
//	CPatch::RedirectJump(0x663820, sub_663820                                                  );
//	CPatch::RedirectJump(0x663870, sub_663870                                                  );
//	CPatch::RedirectJump(0x6638D0, CStlError_TerminateApp                                      );
//	CPatch::RedirectJump(0x6638F0, sub_6638F0                                                  );
//	CPatch::RedirectJump(0x663920, sub_663920                                                  );
//	CPatch::RedirectJump(0x663950, sub_663950                                                  );
//	CPatch::RedirectJump(0x663990, _rwD3D9CheckRasterSize                                      );
//	CPatch::RedirectJump(0x663A40, _rwD3D9RGBToPixel                                           );
//	CPatch::RedirectJump(0x663C90, _rwD3D9PixelToRGB                                           );
//	CPatch::RedirectJump(0x663E80, _rwD3D9ImageGetFromRaster                                   );
//	CPatch::RedirectJump(0x664070, rwD3D9Image32GetFromRaster                                  );
//	CPatch::RedirectJump(0x664460, _rwD3D9ImageFindRasterFormat                                );
//	CPatch::RedirectJump(0x664550, rwD3D9ImageFindFormat                                       );
//	CPatch::RedirectJump(0x664740, _rwD3D9RasterSetFromImage                                   );
//	CPatch::RedirectJump(0x664C40, rwD3D9GetRasterFromImageConverter                           );
//	CPatch::RedirectJump(0x664CE0, rwD3D9ConvR8G8B8A8ToR5G6B5                                  );
//	CPatch::RedirectJump(0x664D10, rwD3D9ConvR8G8B8A8ToA1R5G5B5                                );
//	CPatch::RedirectJump(0x664D50, rwD3D9ConvR8G8B8A8ToA4R4G4B4                                );
//	CPatch::RedirectJump(0x664D90, rwD3D9ConvR8G8B8A8ToX8R8G8B8                                );
//	CPatch::RedirectJump(0x664DC0, rwD3D9ConvR8G8B8A8ToA8R8G8B8                                );
//	CPatch::RedirectJump(0x664DF0, rwD3D9ConvR8G8B8A8ToL8                                      );
//	CPatch::RedirectJump(0x664E50, rwD3D9RasterPalletizedSetFromImage                          );
//	CPatch::RedirectJump(0x6651A0, rwD3D9Raster24_32LinearSetFromImage                         );
//	CPatch::RedirectJump(0x665450, _rwFreeListEnable                                           );
//	CPatch::RedirectJump(0x665460, _rwFreeListCreate                                           );
//	CPatch::RedirectJump(0x665480, FreeListCreate                                              );
	CPatch::RedirectJump(0x665620, RwFreeListCreateAndPreallocateSpace                         );
	CPatch::RedirectJump(0x665630, RwFreeListDestroy                                           );
//	CPatch::RedirectJump(0x6656C0, _rwFreeListAllocReal                                        );
//	CPatch::RedirectJump(0x6657E0, _rwFreeListFreeReal                                         );
	CPatch::RedirectJump(0x6658A0, RwFreeListPurge                                             );
	CPatch::RedirectJump(0x665950, RwFreeListForAllUsed                                        );
	CPatch::RedirectJump(0x665A50, RwFreeListPurgeAllFreeLists                                 );
//	CPatch::RedirectJump(0x665A90, _rwMemoryOpen                                               );
//	CPatch::RedirectJump(0x665B60, HCalloc                                                     );
//	CPatch::RedirectJump(0x665BA0, _rwMemoryClose                                              );
//	CPatch::RedirectJump(0x665CE0, _rwD3D9Im2DRenderOpen                                       );
//	CPatch::RedirectJump(0x665DA0, _rwD3D9Im2DRenderClose                                      );
//	CPatch::RedirectJump(0x665DE0, _rwD3D9Im2DRenderLine                                       );
//	CPatch::RedirectJump(0x665FE0, _rwD3D9Im2DRenderTriangle                                   );
//	CPatch::RedirectJump(0x666230, _rwD3D9Im2DRenderPrimitive                                  );
//	CPatch::RedirectJump(0x6664A0, _rwD3D9Im2DRenderIndexedPrimitive                           );
//	CPatch::RedirectJump(0x6669E0, _rwD3D9DecompressDXT1                                       );
//	CPatch::RedirectJump(0x666D30, _rwD3D9DecompressDXT3                                       );
//	CPatch::RedirectJump(0x667080, _rwD3D9DecompressDXT5                                       );
//	CPatch::RedirectJump(0x667380, DecodeAlpha3BitLinear                                       );
//	CPatch::RedirectJump(0x667620, _rxD3D9VertexBufferManagerOpen                              );
//	CPatch::RedirectJump(0x667660, _rxD3D9VertexBufferManagerClose                             );
//	CPatch::RedirectJump(0x667780, _rxD3D9VertexBufferManagerCreate                            );
//	CPatch::RedirectJump(0x6677B0, D3D9GetFVFVertexSize                                        );
//	CPatch::RedirectJump(0x667880, _rxD3D9VertexBufferManagerCreateFVFStride                   );
//	CPatch::RedirectJump(0x667A40, _rxD3D9VertexBufferManagerDestroy                           );
//	CPatch::RedirectJump(0x667A70, _rxD3D9VertexBufferManagerDestroyFVFStride                  );
//	CPatch::RedirectJump(0x667BC0, __rxD3D9VertexBufferManagerDestroyNoFVF                     );
//	CPatch::RedirectJump(0x667BF0, start                                                       );
//	CPatch::RedirectJump(0x667CD0, sub_667CD0                                                  );
//	CPatch::RedirectJump(0x667CFE, sub_667CFE                                                  );
//	CPatch::RedirectJump(0x667D10, sub_667D10                                                  );
//	CPatch::RedirectJump(0x667D50, sub_667D50                                                  );
//	CPatch::RedirectJump(0x667EE0, sub_667EE0                                                  );
//	CPatch::RedirectJump(0x667F00, sub_667F00                                                  );
//	CPatch::RedirectJump(0x667FD0, sub_667FD0                                                  );
//	CPatch::RedirectJump(0x668020, sub_668020                                                  );
//	CPatch::RedirectJump(0x6680C0, sub_6680C0                                                  );
//	CPatch::RedirectJump(0x6685F0, sub_6685F0                                                  );
//	CPatch::RedirectJump(0x668640, sub_668640                                                  );
//	CPatch::RedirectJump(0x6686D0, sub_6686D0                                                  );
//	CPatch::RedirectJump(0x6687E0, sub_6687E0                                                  );
//	CPatch::RedirectJump(0x6687F0, sub_6687F0                                                  );
//	CPatch::RedirectJump(0x668B10, sub_668B10                                                  );
//	CPatch::RedirectJump(0x668B50, sub_668B50                                                  );
//	CPatch::RedirectJump(0x668BA0, sub_668BA0                                                  );
	CPatch::RedirectJump(0x668BB0, _rxPipelineClose                                            );
	CPatch::RedirectJump(0x668C10, _rxPipelineOpen                                             );
//	CPatch::RedirectJump(0x668CE0, PipelineNodeDestroy                                         );
	CPatch::RedirectJump(0x668F10, RxHeapGetGlobalHeap                                         );
	CPatch::RedirectJump(0x668F20, RxPipelineExecute                                           );
	CPatch::RedirectJump(0x668FC0, RxPipelineCreate                                            );
	CPatch::RedirectJump(0x669030, _rxPipelineDestroy                                          );
//	CPatch::RedirectJump(0x6690A0, _rwRenderPipelineOpen                                       );
//	CPatch::RedirectJump(0x6690C0, _rwRenderPipelineClose                                      );
//	CPatch::RedirectJump(0x6690D0, _rwPipeAttach                                               );
//	CPatch::RedirectJump(0x6690E0, _rwPipeInitForCamera                                        );
//	CPatch::RedirectJump(0x6690F0, _rwResourcesOpen                                            );
//	CPatch::RedirectJump(0x6691E0, _rwResourcesClose                                           );
	CPatch::RedirectJump(0x669240, RwResourcesFreeResEntry                                     );
	CPatch::RedirectJump(0x6692B0, _rwResourcesPurge                                           );
	CPatch::RedirectJump(0x669330, RwResourcesAllocateResEntry                                 );
	CPatch::RedirectJump(0x669520, RwResourcesEmptyArena                                       );
//	CPatch::RedirectJump(0x669610, _rwPluginRegistryOpen                                       );
//	CPatch::RedirectJump(0x669650, _rwPluginRegistryClose                                      );
//	CPatch::RedirectJump(0x669720, rwDestroyEntry                                              );
	CPatch::RedirectJump(0x669760, _rwPluginRegistryGetPluginOffset                            );
	CPatch::RedirectJump(0x669790, _rwPluginRegistryAddPlugin                                  );
//	CPatch::RedirectJump(0x669990, PluginDefaultConstructor                                    );
//	CPatch::RedirectJump(0x6699A0, PluginDefaultDestructor                                     );
//	CPatch::RedirectJump(0x6699B0, PluginDefaultCopy                                           );
	CPatch::RedirectJump(0x6699C0, _rwPluginRegistryInitObject                                 );
	CPatch::RedirectJump(0x669A20, _rwPluginRegistryDeInitObject                               );
	CPatch::RedirectJump(0x669A50, _rwPluginRegistryCopyObject                                 );
//	CPatch::RedirectJump(0x669A90, _rwErrorOpen                                                );
//	CPatch::RedirectJump(0x669AD0, _rwErrorClose                                               );
	CPatch::RedirectJump(0x669AE0, RwErrorSet                                                  );
	CPatch::RedirectJump(0x669B40, RwErrorGet                                                  );
	CPatch::RedirectJump(0x669B90, _rwerror                                                    );
//	CPatch::RedirectJump(0x669BA0, _rpPluginRegistryAddPluginStream                            );
	CPatch::RedirectJump(0x669BE0, _rwPluginRegistryAddPlgnStrmlwysCB                          );
	CPatch::RedirectJump(0x669C10, _rwPluginRegistryAddPlgnStrmRightsCB                        );
	CPatch::RedirectJump(0x669C40, _rwPluginRegistryReadDataChunks                             );
	CPatch::RedirectJump(0x669D70, _rwPluginRegistryInvokeRights                               );
	CPatch::RedirectJump(0x669DC0, _rwPluginRegistryGetSize                                    );
	CPatch::RedirectJump(0x669E00, _rwPluginRegistryWriteDataChunks                            );
	CPatch::RedirectJump(0x669ED0, _rwPluginRegistrySkipDataChunks                             );
	CPatch::RedirectJump(0x669F50, RwCameraStreamRead                                          );
//	CPatch::RedirectJump(0x66A0B0, sub_66A0B0                                                  );
//	CPatch::RedirectJump(0x66A0E0, sub_66A0E0                                                  );
//	CPatch::RedirectJump(0x66A110, _initptd                                                    );
//	CPatch::RedirectJump(0x66A250, sub_66A250                                                  );
//	CPatch::RedirectJump(0x66A280, sub_66A280                                                  );
//	CPatch::RedirectJump(0x66A2C0, _getptd                                                     );
	CPatch::RedirectJump(0x66A320, _rwStringOpen                                               );
//	CPatch::RedirectJump(0x66A420, StrICmp                                                     );
//	CPatch::RedirectJump(0x66A470, StrUpr                                                      );
//	CPatch::RedirectJump(0x66A4A0, StrLwr                                                      );
//	CPatch::RedirectJump(0x66A4D0, StrChr                                                      );
//	CPatch::RedirectJump(0x66A4F0, StrRChr                                                     );
	CPatch::RedirectJump(0x66A510, _rwStringClose                                              );
//	CPatch::RedirectJump(0x66A520, _rwColorOpen                                                );
//	CPatch::RedirectJump(0x66A530, _rwColorClose                                               );
	CPatch::RedirectJump(0x66A540, _rwFrameSyncDirty                                           );
//	CPatch::RedirectJump(0x66A6F0, FrameSyncHierarchyRecurse                                   );
//	CPatch::RedirectJump(0x66A770, FrameSyncHierarchyRecurseNoLTM                              );
	CPatch::RedirectJump(0x66A7C0, _rwFrameSyncHierarchyLTM                                    );
//	CPatch::RedirectJump(0x66A840, FrameSyncHierarchyLTMRecurse                                );
	CPatch::RedirectJump(0x66A8A0, RpHAnimKeyFrameApply                                        );
	//CPatch::RedirectJump(0x66A9C0, RpHAnimKeyFrameInterpolate                                  ); // Moved to HAnim hook
	CPatch::RedirectJump(0x66ADE0, RpHAnimKeyFrameBlend                                        );
	CPatch::RedirectJump(0x66B1E0, RpHAnimKeyFrameStreamRead                                   );
	CPatch::RedirectJump(0x66B260, RpHAnimKeyFrameStreamWrite                                  );
	CPatch::RedirectJump(0x66B2D0, RpHAnimKeyFrameStreamGetSize                                );
	CPatch::RedirectJump(0x66B2E0, RpHAnimKeyFrameMulRecip                                     );
	CPatch::RedirectJump(0x66B440, RpHAnimKeyFrameAdd                                          );
//	CPatch::RedirectJump(0x66B510, sub_66B510                                                  );
//	CPatch::RedirectJump(0x66B580, sub_66B580                                                  );
//	CPatch::RedirectJump(0x66B6E0, sub_66B6E0                                                  );
//	CPatch::RedirectJump(0x66B7A0, sub_66B7A0                                                  );
//	CPatch::RedirectJump(0x66B890, sub_66B890                                                  );
//	CPatch::RedirectJump(0x66B950, sub_66B950                                                  );
//	CPatch::RedirectJump(0x66B970, sub_66B970                                                  );
//	CPatch::RedirectJump(0x66BA00, sub_66BA00                                                  );
//	CPatch::RedirectJump(0x66BA20, sub_66BA20                                                  );
//	CPatch::RedirectJump(0x66BAA0, sub_66BAA0                                                  );
//	CPatch::RedirectJump(0x66BB10, _rwD3D9MatrixMultiplyTranspose                              );
//	CPatch::RedirectJump(0x66BC50, _rwSkinD3D9AtomicAllInOneNode                               );
//	CPatch::RedirectJump(0x66C100, sub_66C100                                                  );
//	CPatch::RedirectJump(0x66C1A0, _rxD3D9SkinAtomicCreateVertexBuffer                         );
//	CPatch::RedirectJump(0x66C2E0, _rxD3D9SkinGeometryInstanceStaticInfo                       );
//	CPatch::RedirectJump(0x66C510, SkinMatBlendAtomicRender                                    );
//	CPatch::RedirectJump(0x66CD50, D3D9SkinGenericMatrixBlend                                  );
//	CPatch::RedirectJump(0x66D1F0, D3D9SkinGenericMatrixBlend1Weight                           );
//	CPatch::RedirectJump(0x66D2E0, D3D9SkinGenericMatrixBlend1Matrix                           );
//	CPatch::RedirectJump(0x66D3C0, _rpSkinPipelinesDestroy                                     );
//	CPatch::RedirectJump(0x66D3F0, BonesUsedSort                                               );
	CPatch::RedirectJump(0x66D410, _rpSkinInitialize                                           );
	CPatch::RedirectJump(0x66D4F0, _rpSkinDeinitialize                                         );
//	CPatch::RedirectJump(0x66D500, _rpSkinGeometryNativeSize                                   );
//	CPatch::RedirectJump(0x66D510, _rpSkinGeometryNativeWrite                                  );
//	CPatch::RedirectJump(0x66D580, _rpSkinGeometryNativeRead                                   );
//	CPatch::RedirectJump(0x66D650, _rpSkinPipelinesCreate                                      );
//	CPatch::RedirectJump(0x66D680, _rpSkinPipelinesAttach                                      );
//	CPatch::RedirectJump(0x66D690, _rwD3D9SkinNeedsAManagedVertexBuffer                        );
//	CPatch::RedirectJump(0x66D6A0, _rpSkinSplitDataStreamWrite                                 );
//	CPatch::RedirectJump(0x66D730, _rpSkinSplitDataStreamRead                                  );
//	CPatch::RedirectJump(0x66D890, _rpSkinSplitDataStreamGetSize                               );
	CPatch::RedirectJump(0x66D8B0, RwBBoxCalculate                                             );
//	CPatch::RedirectJump(0x66D970, sub_66D970                                                  );
//	CPatch::RedirectJump(0x66D985, sub_66D985                                                  );
	CPatch::RedirectJump(0x66D9B0, _rpMaterialListDeinitialize                                 );
	CPatch::RedirectJump(0x66DA10, _rpMaterialListInitialize                                   );
	CPatch::RedirectJump(0x66DA20, _rpMaterialListGetMaterial                                  );
	CPatch::RedirectJump(0x66DA30, _rpMaterialListAppendMaterial                               );
	CPatch::RedirectJump(0x66DAF0, _rpMaterialListFindMaterialIndex                            );
	CPatch::RedirectJump(0x66DB20, _rpMaterialListStreamRead                                   );
	CPatch::RedirectJump(0x66DE80, _rpMeshHeaderCreate                                         );
	CPatch::RedirectJump(0x66DE90, _rpMeshClose                                                );
	CPatch::RedirectJump(0x66DEC0, _rpMeshOpen                                                 );
	CPatch::RedirectJump(0x66DFE0, _rpBuildMeshCreate                                          );
	CPatch::RedirectJump(0x66E0C0, _rpBuildMeshDestroy                                         );
	CPatch::RedirectJump(0x66E100, _rpMeshDestroy                                              );
	CPatch::RedirectJump(0x66E140, _rpBuildMeshAddTriangle                                     );
	CPatch::RedirectJump(0x66E220, _rpMeshHeaderForAllMeshes                                   );
	CPatch::RedirectJump(0x66E260, _rpMeshWrite                                                );
	CPatch::RedirectJump(0x66E3B0, _rpMeshRead                                                 );
	CPatch::RedirectJump(0x66E580, _rpMeshSize                                                 );
	CPatch::RedirectJump(0x66E5D0, RpBuildMeshGenerateDefaultTriStrip                          );
//	CPatch::RedirectJump(0x66E5F0, TriStripMeshGenerate                                        );
//	CPatch::RedirectJump(0x66EA50, SortPolygons                                                );
//	CPatch::RedirectJump(0x66EBA0, TriStripStripTris                                           );
//	CPatch::RedirectJump(0x66F480, TriStripBinEntryArrayCreate                                 );
//	CPatch::RedirectJump(0x66F580, TriStripAddEdge                                             );
//	CPatch::RedirectJump(0x66F620, TriStripMarkTriUsed                                         );
//	CPatch::RedirectJump(0x66F740, TriStripFollow                                              );
//	CPatch::RedirectJump(0x66FA50, TriStripJoin                                                );
	CPatch::RedirectJump(0x66FCC0, _rpTriListMeshGenerate                                      );
//	CPatch::RedirectJump(0x66FEB0, SortPolygonsInTriListMesh                                   );
	CPatch::RedirectJump(0x6700E0, _rpMeshOptimise                                             );
	CPatch::RedirectJump(0x670140, RwPalQuantAddImage                                          );
//	CPatch::RedirectJump(0x670500, AllocateToLeaf                                              );
	CPatch::RedirectJump(0x670580, RwPalQuantResolvePalette                                    );
//	CPatch::RedirectJump(0x670BF0, InitLeaf                                                    );
//	CPatch::RedirectJump(0x670C10, assignindex                                                 );
//	CPatch::RedirectJump(0x670DD0, addvolume                                                   );
//	CPatch::RedirectJump(0x670FC0, FindBestCut                                                 );
//	CPatch::RedirectJump(0x671620, CountLeafs                                                  );
//	CPatch::RedirectJump(0x671660, ExtractNodes                                                );
	CPatch::RedirectJump(0x6717C0, RwPalQuantMatchImage                                        );
//	CPatch::RedirectJump(0x671BC0, GetIndex                                                    );
	CPatch::RedirectJump(0x671C00, RwPalQuantInit                                              );
	CPatch::RedirectJump(0x671CB0, RwPalQuantTerm                                              );
//	CPatch::RedirectJump(0x671D30, DeleteOctTree                                               );
	CPatch::RedirectJump(0x671D80, RwImageResample                                             );
//	CPatch::RedirectJump(0x6721A0, ImageResampleGetSpan                                        );
	CPatch::RedirectJump(0x672490, RwImageCreateResample                                       );
//	CPatch::RedirectJump(0x672590, _rwpathisabsolute                                           );
//	CPatch::RedirectJump(0x6725C0, sub_6725C0                                                  );
//	CPatch::RedirectJump(0x672720, sub_672720                                                  );
//	CPatch::RedirectJump(0x672750, sub_672750                                                  );
//	CPatch::RedirectJump(0x6727A0, sub_6727A0                                                  );
//	CPatch::RedirectJump(0x672810, set_file_pos                                                );
//	CPatch::RedirectJump(0x672880, sub_672880                                                  );
//	CPatch::RedirectJump(0x672990, sub_672990                                                  );
//	CPatch::RedirectJump(0x6729F0, read_file_related2                                          );
//	CPatch::RedirectJump(0x672B00, open_file_related                                           );
//	CPatch::RedirectJump(0x672CC0, sub_672CC0                                                  );
//	CPatch::RedirectJump(0x672D70, sub_672D70                                                  );
//	CPatch::RedirectJump(0x672DB0, sub_672DB0                                                  );
//	CPatch::RedirectJump(0x672DE0, sub_672DE0                                                  );
//	CPatch::RedirectJump(0x672E10, sub_672E10                                                  );
//	CPatch::RedirectJump(0x672E70, sub_672E70                                                  );
//	CPatch::RedirectJump(0x672E90, sub_672E90                                                  );
//	CPatch::RedirectJump(0x672EA0, feof                                                        );
//	CPatch::RedirectJump(0x672EB0, sub_672EB0                                                  );
//	CPatch::RedirectJump(0x672EC0, nullsub_33                                                  );
//	CPatch::RedirectJump(0x672ED0, nullsub_34                                                  );
//	CPatch::RedirectJump(0x672EE0, sub_672EE0                                                  );
//	CPatch::RedirectJump(0x672F10, sub_672F10                                                  );
//	CPatch::RedirectJump(0x672FB0, sub_672FB0                                                  );
//	CPatch::RedirectJump(0x673020, sub_673020                                                  );
//	CPatch::RedirectJump(0x673160, sub_673160                                                  );
//	CPatch::RedirectJump(0x6731B0, sub_6731B0                                                  );
//	CPatch::RedirectJump(0x6731C0, sub_6731C0                                                  );
//	CPatch::RedirectJump(0x673400, sub_673400                                                  );
	CPatch::RedirectJump(0x673470, RpWorldSetDefaultSectorPipeline                             );
	CPatch::RedirectJump(0x6734A0, RpAtomicSetDefaultPipeline                                  );
//	CPatch::RedirectJump(0x6734D0, _rpWorldPipelineClose                                       );
//	CPatch::RedirectJump(0x6734E0, _rpWorldPipelineOpen                                        );
//	CPatch::RedirectJump(0x673520, _rpWorldPipeAttach                                          );
//	CPatch::RedirectJump(0x673530, _rpReadWorldRights                                          );
//	CPatch::RedirectJump(0x673570, _rpWriteWorldRights                                         );
//	CPatch::RedirectJump(0x6735B0, _rpSizeWorldRights                                          );
//	CPatch::RedirectJump(0x6735D0, _rpReadSectRights                                           );
//	CPatch::RedirectJump(0x673610, _rpWriteSectRights                                          );
//	CPatch::RedirectJump(0x673660, _rpSizeSectRights                                           );
//	CPatch::RedirectJump(0x673680, _rpBinaryWorldClose                                         );
//	CPatch::RedirectJump(0x673690, _rpBinaryWorldOpen                                          );
//	CPatch::RedirectJump(0x6736A0, _rpSectorOpen                                               );
//	CPatch::RedirectJump(0x6736B0, _rpSectorClose                                              );
	CPatch::RedirectJump(0x6736C0, RpWorldSectorRegisterPlugin                                 );
	CPatch::RedirectJump(0x6736F0, RpWorldSectorRegisterPluginStream                           );
//	CPatch::RedirectJump(0x673720, _rpGeometryNativeWrite                                      );
//	CPatch::RedirectJump(0x673920, _rpGeometryNativeRead                                       );
//	CPatch::RedirectJump(0x673C30, _rpGeometryNativeSize                                       );
//	CPatch::RedirectJump(0x673C70, _rpWorldSectorNativeWrite                                   );
//	CPatch::RedirectJump(0x673E80, _rpWorldSectorNativeRead                                    );
//	CPatch::RedirectJump(0x674170, _rpWorldSectorNativeSize                                    );
//	CPatch::RedirectJump(0x6741D0, _rxWorldDevicePluginAttach                                  );
//	CPatch::RedirectJump(0x6741E0, _rpCreatePlatformMaterialPipelines                          );
//	CPatch::RedirectJump(0x6741F0, _rpDestroyPlatformMaterialPipelines                         );
//	CPatch::RedirectJump(0x674200, _rpCreatePlatformWorldSectorPipelines                       );
//	CPatch::RedirectJump(0x674270, _rpDestroyPlatformWorldSectorPipelines                      );
//	CPatch::RedirectJump(0x6742B0, _rpCreatePlatformAtomicPipelines                            );
//	CPatch::RedirectJump(0x674330, _rpDestroyPlatformAtomicPipelines                           );
//	CPatch::RedirectJump(0x674380, _rpMatFXD3D9AtomicMatFXDefaultRender                        );
//	CPatch::RedirectJump(0x674450, _rpMatFXD3D9AtomicMatFXRenderBlack                          );
//	CPatch::RedirectJump(0x674510, _rpMatFXD3D9AtomicMatFXDualPassRender                       );
//	CPatch::RedirectJump(0x674EE0, _rpMatFXD3D9AtomicMatFXEnvRender                            );
//	CPatch::RedirectJump(0x6755D0, ApplyEnvMapTextureMatrix                                    );
//	CPatch::RedirectJump(0x6756F0, _rpMatFXD3D9AtomicMatFXBumpMapRender                        );
//	CPatch::RedirectJump(0x675AF0, CalculatePerturbedUVs                                       );
//	CPatch::RedirectJump(0x676460, _rwD3D9AtomicMatFXRenderCallback                            );
//	CPatch::RedirectJump(0x676650, _rpMatFXPipelinesCreate                                     );
//	CPatch::RedirectJump(0x676860, _rpMatFXPipelinesDestroy                                    );
//	CPatch::RedirectJump(0x676930, _rpMatFXPipelineAtomicSetup                                 );
//	CPatch::RedirectJump(0x676940, _rpMatFXPipelineWorldSectorSetup                            );
//	CPatch::RedirectJump(0x676960, _rpMatFXSetupDualRenderState                                );
//	CPatch::RedirectJump(0x676970, _rpMatFXSetupBumpMapTexture                                 );
	CPatch::RedirectJump(0x676980, RxHeapFree                                                  );
//	CPatch::RedirectJump(0x676AC0, HeapFreeBlocksNewEntry                                      );
	CPatch::RedirectJump(0x676B70, RxHeapAlloc                                                 );
//	CPatch::RedirectJump(0x676CC0, HeapSuperBlockReset                                         );
//	CPatch::RedirectJump(0x676D40, HeapAllocFrom                                               );
	CPatch::RedirectJump(0x676DE0, _rxHeapReset                                                );
	CPatch::RedirectJump(0x676E50, RxHeapDestroy                                               );
	CPatch::RedirectJump(0x676EB0, RxHeapCreate                                                );
//	CPatch::RedirectJump(0x676FC0, _rwIm3DCreatePlatformTransformPipeline                      );
//	CPatch::RedirectJump(0x677030, _rwIm3DDestroyPlatformTransformPipeline                     );
//	CPatch::RedirectJump(0x677060, _rwIm3DDestroyPlatformRenderPipelines                       );
//	CPatch::RedirectJump(0x6770C0, _rwIm3DCreatePlatformRenderPipelines                        );
//	CPatch::RedirectJump(0x677160, _rwCPUHaveMMX                                               );
//	CPatch::RedirectJump(0x6771C0, _rwCPUHaveSSE                                               );
//	CPatch::RedirectJump(0x677220, _rwCPUHaveSSE2                                              );
//	CPatch::RedirectJump(0x677280, _rwCPUHave3DNow                                             );
//	CPatch::RedirectJump(0x677310, _rwD3D9Im3DRenderClose                                      );
//	CPatch::RedirectJump(0x677330, _rwD3D9Im3DRenderOpen                                       );
//	CPatch::RedirectJump(0x677390, rxD3D9SubmitNode                                            );
//	CPatch::RedirectJump(0x677950, D3D9ImmInstanceNode                                         );
//	CPatch::RedirectJump(0x677970, RxNodeDefinitionGetD3D9ImmInstance                          );
//	CPatch::RedirectJump(0x677980, RxNodeDefinitionGetD3D9SubmitNoLight                        );
//	CPatch::RedirectJump(0x677990, sub_677990                                                  );
//	CPatch::RedirectJump(0x6779D0, sub_6779D0                                                  );
//	CPatch::RedirectJump(0x6779F0, sub_6779F0                                                  );
//	CPatch::RedirectJump(0x677A50, sub_677A50                                                  );
//	CPatch::RedirectJump(0x677AA0, sub_677AA0                                                  );
//	CPatch::RedirectJump(0x677AF0, sub_677AF0                                                  );
//	CPatch::RedirectJump(0x677B60, sub_677B60                                                  );
//	CPatch::RedirectJump(0x677BD0, sub_677BD0                                                  );
//	CPatch::RedirectJump(0x677C30, sub_677C30                                                  );
//	CPatch::RedirectJump(0x677D10, sub_677D10                                                  );
//	CPatch::RedirectJump(0x677D80, sub_677D80                                                  );
//	CPatch::RedirectJump(0x677DD0, sub_677DD0                                                  );
//	CPatch::RedirectJump(0x677E40, sub_677E40                                                  );
//	CPatch::RedirectJump(0x677EC0, sub_677EC0                                                  );
//	CPatch::RedirectJump(0x677F00, sub_677F00                                                  );
//	CPatch::RedirectJump(0x677F20, sub_677F20                                                  );
//	CPatch::RedirectJump(0x677F70, sub_677F70                                                  );
//	CPatch::RedirectJump(0x678090, sub_678090                                                  );
//	CPatch::RedirectJump(0x678290, sub_678290                                                  );
//	CPatch::RedirectJump(0x6782C0, sub_6782C0                                                  );
//	CPatch::RedirectJump(0x6782D0, sub_6782D0                                                  );
//	CPatch::RedirectJump(0x6782E0, sub_6782E0                                                  );
//	CPatch::RedirectJump(0x6782F0, sub_6782F0                                                  );
//	CPatch::RedirectJump(0x678300, sub_678300                                                  );
	CPatch::RedirectJump(0x678420, RxRenderStateVectorSetDefaultRenderStateVector              );
	CPatch::RedirectJump(0x678510, _rxPacketDestroy                                            );
//	CPatch::RedirectJump(0x678570, _rwResHeapInit                                              );
//	CPatch::RedirectJump(0x6785C0, _rwResHeapClose                                             );
//	CPatch::RedirectJump(0x6785D0, _rwResHeapFree                                              );
//	CPatch::RedirectJump(0x678650, _rwResHeapAlloc                                             );
//	CPatch::RedirectJump(0x6786D0, splitBlock                                                  );
//	CPatch::RedirectJump(0x678740, _rwD3D9MeshGetNumVerticesMinIndex                           );
//	CPatch::RedirectJump(0x6787A0, SortTriangles                                               );
//	CPatch::RedirectJump(0x678830, _rxD3D9Instance                                             );
//	CPatch::RedirectJump(0x678AE0, _rxD3D9Reinstance                                           );
//	CPatch::RedirectJump(0x678B30, _rxD3D9DefaultRenderCallback                                );
	CPatch::RedirectJump(0x678E30, RxD3D9AllInOneSetRenderCallBack                             );
//	CPatch::RedirectJump(0x678E40, _rpSkinIntelSSEMatrixBlend1Matrix                           );
//	CPatch::RedirectJump(0x678EF0, _rpSkinIntelSSEMatrixBlend1Weight                           );
//	CPatch::RedirectJump(0x678FD0, _rpSkinIntelSSEMatrixBlend                                  );
//	CPatch::RedirectJump(0x6792C0, _rpSkinIntelSSEMatrixBlend2Weights                          );
//	CPatch::RedirectJump(0x679500, _rpSkinPrepareAtomicMatrix                                  );
//	CPatch::RedirectJump(0x6796B0, _rxSkinD3D9AtomicAllInOnePipelineInit                       );
//	CPatch::RedirectJump(0x6796D0, _rpSkinD3D9CreatePlainPipe                                  );
//	CPatch::RedirectJump(0x679740, _rpD3D9LightPluginAttach                                    );
//	CPatch::RedirectJump(0x679770, _rpD3D9LightConstructor                                     );
//	CPatch::RedirectJump(0x6797A0, _rpD3D9LightDestructor                                      );
//	CPatch::RedirectJump(0x679830, _rpD3D9LightCopy                                            );
	CPatch::RedirectJump(0x679870, _rwD3D9LightsOpen                                           );
	CPatch::RedirectJump(0x679AD0, _rwD3D9LightsClose                                          );
	CPatch::RedirectJump(0x679B60, _rwD3D9LightsGlobalEnable                                   );
	CPatch::RedirectJump(0x679D50, _rwD3D9LightLocalEnable                                     );
	CPatch::RedirectJump(0x679FC0, _rwD3D9LightsEnable                                         );
//	CPatch::RedirectJump(0x67A0D0, StalacTiteAlloc                                             );
//	CPatch::RedirectJump(0x67A130, StalacMiteAlloc                                             );
//	CPatch::RedirectJump(0x67A190, PipelineCalcNumUniqueClusters                               );
	CPatch::RedirectJump(0x67A200, RxLockedPipeUnlock                                          );
//	CPatch::RedirectJump(0x67A790, ReallocAndFixupSuperBlock                                   );
//	CPatch::RedirectJump(0x67A8A0, LockPipelineExpandData                                      );
//	CPatch::RedirectJump(0x67AA70, PipelineTopSort                                             );
	CPatch::RedirectJump(0x67AC50, RxPipelineLock                                              );
	CPatch::RedirectJump(0x67AD70, RxPipelineFindNodeByName                                    );
	CPatch::RedirectJump(0x67AE00, RxLockedPipeAddFragment                                     );
//	CPatch::RedirectJump(0x67B010, _NodeCreate                                                 );
//	CPatch::RedirectJump(0x67B150, sub_67B150                                                  );
//	CPatch::RedirectJump(0x67B2A0, D3D9WorldSectorAllInOnePipelineInit                         );
//	CPatch::RedirectJump(0x67B2D0, D3D9WorldSectorDefaultLightingCallback                      );
//	CPatch::RedirectJump(0x67B340, D3D9WorldSectorDefaultInstanceCallback                      );
	CPatch::RedirectJump(0x67B6C0, RxNodeDefinitionGetD3D9WorldSectorAllInOne                  );
//	CPatch::RedirectJump(0x67B6D0, _rwD3D9AtomicDefaultLightingCallback                        );
//	CPatch::RedirectJump(0x67B810, D3D9AtomicAllInOneNode                                      );
//	CPatch::RedirectJump(0x67BAB0, D3D9AtomicAllInOnePipelineInit                              );
//	CPatch::RedirectJump(0x67BAE0, D3D9AtomicDefaultInstanceCallback                           );
//	CPatch::RedirectJump(0x67C640, D3D9AtomicDefaultReinstanceCallback                         );
//	CPatch::RedirectJump(0x67C6A0, D3D9InstanceDataMorphUpdate                                 );
	CPatch::RedirectJump(0x67CB90, RxNodeDefinitionGetD3D9AtomicAllInOne                       );
//	CPatch::RedirectJump(0x67CBA0, _rxChaseDependencies                                        );
//	CPatch::RedirectJump(0x67CF30, _ReqCreate                                                  );
//	CPatch::RedirectJump(0x67CF80, _ReqAddEntry                                                );
//	CPatch::RedirectJump(0x67D010, _IoSpecSearch4Cluster                                       );
//	CPatch::RedirectJump(0x67D040, _PropDownElimPath                                           );
//	CPatch::RedirectJump(0x67D160, _ForAllNodeReqsAddOutputClustersAndBuildContinuityBitfields );
//	CPatch::RedirectJump(0x67D440, _TraceClusterScopes                                         );
//	CPatch::RedirectJump(0x67D670, _AssignClusterSlots                                         );
//	CPatch::RedirectJump(0x67D700, _ForAllNodesWriteClusterAllocations                         );
//	CPatch::RedirectJump(0x67DA80, _MyEnumPipelineClustersCallBack                             );
//	CPatch::RedirectJump(0x67DAB0, _rx_rxRadixExchangeSort                                     );
//	CPatch::RedirectJump(0x6F6000, _rwIntelx86AsmV3dTransformPoints                            );
//	CPatch::RedirectJump(0x6F607F, _rwIntelx86AsmV3dTransformVectors                           );
//	CPatch::RedirectJump(0x6F60F0, _rwX86AsmMatMul                                             );
//	CPatch::RedirectJump(0x6F61CC, _rwIntelx86AsmMatrixMultiply                                );
//	CPatch::RedirectJump(0x6F6330, _rwProcessorInitialize                                      );
//	CPatch::RedirectJump(0x6F6357, _rwProcessorRelease                                         );
//	CPatch::RedirectJump(0x6F635E, _rwProcessorForceSinglePrecision                            );
//	CPatch::RedirectJump(0xA12C8F, sub_A12C8F                                                  );
}